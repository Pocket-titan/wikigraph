{"version":3,"sources":["ts/utils.ts","ts/wiki.ts","ts/graph.ts","ts/hooks/useStore.ts","components/Input/index.tsx","components/Input/Input.tsx","components/Pages.tsx","components/Graph.tsx","ts/hooks/useWindowSize.ts","components/Grid.tsx","components/PageInfo.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["unwrapIfSingle","obj","_","isPlainObject","isArray","Object","keys","length","isSingle","unwrap","beautifyTitle","title","beautifulTitle","replace","split","splice","join","stringifyParams","params","parsed","mapValues","value","key","Date","getTime","undefined","parseInt","qs","stringify","arrayFormat","arrayFormatSeparator","request","a","url","action","format","formatversion","origin","errorformat","utf8","fetch","method","mode","credentials","window","headers","response","ok","Error","status","statusText","json","errors","JSON","getCustomLimits","entries","filter","slice","map","batchRequest","results","res","push","continue","continueType","continueKey","prefixes","x","some","prefix","includes","flatMap","result","query","Cache","Map","api","cacheKey","has","parse","get","set","getBacklinks","gbltitle","generator","gblnamespace","gbllimit","gblredirect","backlinks","iteratee","search","namespace","limit","titles","summaries","urls","pages","zip","summary","getImages","gimlimit","prop","iilimit","iiprop","uniqBy","file","startsWith","omit","imageinfo","width","height","getFileUsage","gusite","gunamespace","gulimit","guprop","globalusage","chance","Chance","getVertex","vertices","id","setVertex","vertex","setEdge","edges","edge","firstVertex","Graph","_vertices","_edges","this","i","values","f","g","forEach","source","target","newSource","newTarget","newEdge","predicate","keepSource","keepTarget","connections","outDegree","degree","inDegree","initialAngle","Math","PI","initialRadius","size","maxDegree","angle","radius","sqrt","cos","y","sin","titleVertex","me","isUndefined","random","mean","normal","dev","from","to","makeVertex","buildGraph","Promise","all","links","reduce","graph","calculateDegrees","clamp","color","weight","min","layout","config","useStore","create","data","setTitles","setGraph","setData","clicked","setClicked","fn","produce","Input","React","forwardRef","ref","onResultClick","useState","setValue","setResults","loading","setLoading","debouncedAutocomplete","useRef","debounce","input","wiki","resetInput","current","cancel","style","position","className","display","gridTemplateRows","gridTemplateColumns","boxShadow","type","placeholder","fontSize","onChange","onKeyDown","event","flexDirection","justifyContent","onClick","focus","disabled","preventDefault","flush","zIndex","top","overflow","toLowerCase","fontWeight","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","useStyles","makeStyles","root","active","icon","Pages","removeTitle","setOrder","setOrderBy","styles","rows","in","out","columns","label","align","TableContainer","component","Paper","maxHeight","background","Table","stickyHeader","TableHead","TableRow","column","TableCell","borderBottom","padding","maxWidth","TableSortLabel","direction","classes","border","clip","margin","TableBody","row","scope","marginTop","HoverInfo","Html","scaleFactor","zIndexRange","borderRadius","whiteSpace","dummyObject","three","dummyColor","state","hovered","setHovered","nodeMesh","useThree","camera","useUpdate","mesh","scale","updateMatrix","setMatrixAt","matrix","setColorAt","instanceMatrix","needsUpdate","edgeGeometry","geometry","setFromPoints","flat","computeBoundingSphere","edgeColors","useMemo","Float32Array","setColor","useCallback","instanceColor","useEffect","instanceId","args","onPointerOut","onPointerMove","onPointerUp","attach","attachObject","vertexColors","transparent","opacity","linewidth","getSize","vw","max","document","documentElement","clientWidth","innerWidth","vh","clientHeight","innerHeight","useWindowSize","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","Grid","media","rowHeight","mediaDataToTag","totalIndex","rowIndex","mediaWidth","calculatedRowHeight","marginRight","verticalAlign","cursor","mediatype","image","data-index","src","alt","video","controls","objectFit","preload","onLoadStart","volume","paused","pause","allRows","widthSoFar","minAspectRatio","ratio","elements","j","divStyle","marginBottom","userSelect","Fade","open","children","onEnter","onExited","other","spring","enter","isOpen","next","leave","transitions","useTransition","item","props","div","outline","ImageInfo","usage","setUsage","setOpen","main","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","pointerEvents","alignItems","paddingLeft","paddingRight","paddingTop","paddingBottom","href","rel","objectPosition","listStyle","PageInfo","images","setImages","highlightedImage","setHighlightedImage","console","log","pick","overflowY","flexWrap","shortTitle","Scene","intensity","App","inputRef","newGraph","oldTitles","left","pull","concurrent","near","far","zoom","orthographic","onCreated","gl","outputEncoding","e","blur","TrackballControls","mouseButtons","LEFT","PAN","MIDDLE","RIGHT","ROTATE","noRotate","panSpeed","process","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.393484c9.chunk.js","sourcesContent":["import G from \"generatorics\";\nimport _ from \"lodash\";\n\nexport const isSingle = (obj: any[] | { [key: string]: any }) =>\n  !(_.isPlainObject(obj) || _.isArray(obj)) ? false : Object.keys(obj).length === 1;\n\nexport const unwrap = (obj: object) => obj[Object.keys(obj)[0]];\n\nexport const unwrapIfSingle = (obj: any) => (isSingle(obj) ? unwrap(obj) : obj);\n\nexport const merge = (object: any, ...sources: any[]) => {\n  return _.mergeWith(object, ...sources, (objValue, srcValue) => {\n    if (_.isArray(objValue)) {\n      return objValue.concat(srcValue);\n    }\n  });\n};\n\nexport const permutations = function* <T>(arr: T[], size = arr.length): Generator<T[]> {\n  return yield* G.permutation(arr, size);\n};\n\nexport const beautifyTitle = (title: string) => {\n  const beautifulTitle = title.replace(\"Bestand:\", \"\").split(\".\");\n\n  if (beautifulTitle.length > 1) {\n    beautifulTitle.splice(beautifulTitle.length - 1);\n  }\n\n  return beautifulTitle.join(\".\");\n};\n","import fetch from \"cross-fetch\";\nimport qs from \"query-string\";\nimport _ from \"lodash\";\nimport { unwrapIfSingle } from \"./utils\";\n\nlet props = [\n  \"categories\",\n  \"categoryinfo\",\n  \"cirrusbuilddoc\",\n  \"cirruscompsuggestbuilddoc\",\n  \"cirrusdoc\",\n  \"contributors\",\n  \"deletedrevisions\",\n  \"duplicatefiles\",\n  \"extlinks\",\n  \"extracts\",\n  \"fileusage\",\n  \"globalusage\",\n  \"imageinfo\",\n  \"images\",\n  \"info\",\n  \"iwlinks\",\n  \"langlinks\",\n  \"links\",\n  \"linkshere\",\n  \"pageimages\",\n  \"pageprops\",\n  \"pageterms\",\n  \"pageviews\",\n  \"redirects\",\n  \"revisions\",\n  \"stashimageinfo\",\n  \"templates\",\n  \"transcludedin\",\n  \"transcodestatus\",\n  \"videoinfo\",\n  \"wbentityusage\",\n  \"flowinfo\",\n  \"description\",\n  \"mapdata\",\n] as const;\n\ntype Prop = typeof props[number];\n\nlet lists = [\n  \"abusefilters\",\n  \"abuselog\",\n  \"allcategories\",\n  \"alldeletedrevisions\",\n  \"allfileusages\",\n  \"allimages\",\n  \"alllinks\",\n  \"allpages\",\n  \"allredirects\",\n  \"allrevisions\",\n  \"alltransclusions\",\n  \"allusers\",\n  \"backlinks\",\n  \"betafeatures\",\n  \"blocks\",\n  \"categorymembers\",\n  \"centralnoticeactivecampaigns\",\n  \"centralnoticelogs\",\n  \"checkuser\",\n  \"checkuserlog\",\n  \"codecomments\",\n  \"codepaths\",\n  \"coderevisions\",\n  \"codetags\",\n  \"embeddedin\",\n  \"extdistrepos\",\n  \"exturlusage\",\n  \"filearchive\",\n  \"gadgetcategories\",\n  \"gadgets\",\n  \"globalallusers\",\n  \"globalblocks\",\n  \"globalgroups\",\n  \"imageusage\",\n  \"iwbacklinks\",\n  \"langbacklinks\",\n  \"linterrors\",\n  \"logevents\",\n  \"messagecollection\",\n  \"mostviewed\",\n  \"mystashedfiles\",\n  \"pagepropnames\",\n  \"pageswithprop\",\n  \"prefixsearch\",\n  \"protectedtitles\",\n  \"querypage\",\n  \"random\",\n  \"recentchanges\",\n  \"search\",\n  \"tags\",\n  \"threads\",\n  \"usercontribs\",\n  \"users\",\n  \"watchlist\",\n  \"watchlistraw\",\n  \"wblistentityusage\",\n  \"wikisets\",\n  \"deletedrevs\",\n  \"extdistbranches\",\n  \"mmsites\",\n  \"readinglistentries\",\n] as const;\n\ntype List = typeof lists[number];\n\nlet generator = [\n  \"allcategories\",\n  \"alldeletedrevisions\",\n  \"allfileusages\",\n  \"allimages\",\n  \"alllinks\",\n  \"allpages\",\n  \"allredirects\",\n  \"allrevisions\",\n  \"alltransclusions\",\n  \"backlinks\",\n  \"categories\",\n  \"categorymembers\",\n  \"deletedrevisions\",\n  \"duplicatefiles\",\n  \"embeddedin\",\n  \"exturlusage\",\n  \"fileusage\",\n  \"images\",\n  \"imageusage\",\n  \"iwbacklinks\",\n  \"langbacklinks\",\n  \"links\",\n  \"linkshere\",\n  \"messagecollection\",\n  \"mostviewed\",\n  \"pageswithprop\",\n  \"prefixsearch\",\n  \"protectedtitles\",\n  \"querypage\",\n  \"random\",\n  \"recentchanges\",\n  \"redirects\",\n  \"revisions\",\n  \"search\",\n  \"templates\",\n  \"transcludedin\",\n  \"watchlist\",\n  \"watchlistraw\",\n  \"wblistentityusage\",\n  \"readinglistentries\",\n] as const;\n\ntype Generator = typeof generator[number];\n\ntype Params = {\n  titles?: string | string[];\n  pageids?: number[];\n  revids?: number[];\n  prop?: Prop | Prop[];\n  list?: List | List[];\n  generator?: Generator | Generator[];\n  iwurl?: boolean;\n  redirects?: boolean | string;\n  converttitles?: boolean;\n  [key: string]: any;\n};\n\nfunction stringifyParams(params: { [key: string]: any }) {\n  let parsed = _.mapValues(params, (value, key, obj) => {\n    if (value instanceof Date) {\n      return value.getTime();\n    }\n\n    if (typeof value === \"boolean\") {\n      return value === true ? \"\" : undefined;\n    }\n\n    if (key === \"minsize\" || key === \"maxsize\") {\n      return parseInt(value);\n    }\n\n    return value;\n  });\n\n  return qs.stringify(parsed, {\n    arrayFormat: \"separator\",\n    arrayFormatSeparator: \"|\",\n  });\n}\n\nexport async function request(params: Params = {}) {\n  const url =\n    \"https://nl.wikipedia.org/w/api.php?\" +\n    stringifyParams({\n      ...params,\n      action: params.action || \"query\",\n      format: \"json\",\n      formatversion: 2,\n      origin: \"*\",\n      errorformat: \"raw\",\n      utf8: true,\n    });\n\n  const response = await fetch(url, {\n    method: \"GET\",\n    mode: \"cors\",\n    credentials: \"omit\",\n    ...(typeof window === \"undefined\"\n      ? {\n          headers: {\n            \"User-Agent\":\n              \"graph-builder (https://github.com/pocket-titan/; jelmargerritsen@gmail.com) wiki.ts\",\n          },\n        }\n      : {}),\n  });\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  let json = await response.json();\n\n  if (json.errors) {\n    throw new Error(JSON.stringify(json, null, 2));\n  }\n\n  return json;\n}\n\nconst getCustomLimits = (params: Params): string[] => {\n  let keys = Object.entries(params)\n    .filter(\n      ([key, value]) =>\n        (key === \"limit\" ||\n          key.slice(1) === \"limit\" ||\n          key.slice(2) === \"limit\" ||\n          key.slice(3) === \"limit\") &&\n        value !== \"max\" &&\n        (typeof value === \"number\" ? value < 500 : true)\n    )\n    .map(([key, value]) => key);\n\n  return keys;\n};\n\nasync function batchRequest(params: Params = {}, results: any[] = []): Promise<any[]> {\n  let res = await request(params);\n  results.push(res);\n\n  if (res.continue) {\n    let continueType = Object.keys(res.continue).filter((key) => key !== \"continue\")[0];\n    let continueKey = res.continue[continueType];\n\n    let prefixes = getCustomLimits(params).map((x) => x.replace(\"limit\", \"\"));\n\n    if (\n      ![\n        continueType.slice(0, 1),\n        continueType.slice(0, 2),\n        continueType.slice(0, 3),\n      ].some((prefix) => prefixes.includes(prefix))\n    ) {\n      return await batchRequest({ ...params, [continueType]: continueKey }, results);\n    }\n  }\n\n  return unwrapIfSingle(\n    results.flatMap((result) =>\n      unwrapIfSingle(_.isPlainObject(result) ? result.query : result)\n    )\n  );\n}\n\nconst Cache = new Map<string, string>();\n\nexport async function api(params: Params = {}) {\n  let cacheKey = JSON.stringify(params);\n\n  if (Cache.has(cacheKey)) {\n    try {\n      return JSON.parse(Cache.get(cacheKey)!);\n    } catch {}\n  }\n\n  let results = await batchRequest(params);\n  Cache.set(cacheKey, JSON.stringify(results));\n  return results;\n}\n\ntype BlParams = Prefix<\n  \"bl\",\n  {\n    title?: string;\n    pageid?: number;\n    namespace?: Namespace | Namespace[] | \"*\";\n    dir?: \"ascending\" | \"descending\";\n    filterredir?: \"all\" | \"nonredirects\" | \"redirects\";\n    limit?: number | \"max\";\n    redirect?: boolean;\n  }\n>;\n\ntype Namespace =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 90\n  | 91\n  | 92\n  | 93\n  | 100\n  | 101\n  | 102\n  | 103\n  | 104\n  | 105\n  | 106\n  | 107\n  | 486\n  | 487\n  | 828\n  | 829\n  | 1198\n  | 1199\n  | 2300\n  | 2301\n  | 2302\n  | 2303\n  | 2600\n  | 5500\n  | 5501;\n\ntype Parameters = {\n  titles?: string[];\n  pageids?: number[];\n  prop?: Prop | Prop[];\n  list?: List | List[];\n  generator?:\n    | \"allpages\"\n    | \"allimages\"\n    | \"alllinks\"\n    | \"linkshere\"\n    | \"backlinks\"\n    | \"links\"\n    | \"search\";\n  redirects?: boolean;\n  namespace?: Namespace;\n  limit?: number | \"max\";\n  show?: \"redirect\" | \"!redirect\" | [\"redirect\", \"!redirect\"];\n  title?: string;\n  pageid?: number | string;\n  dir?: \"ascending\" | \"descending\";\n  filterredir?: \"all\" | \"nonredirects\" | \"redirects\";\n  redirect?: boolean;\n  from?: string;\n  to?: string;\n  prefix?: string;\n  sort?: \"name\" | \"timestamp\";\n  start?: Date;\n  end?: Date;\n  minsize?: number;\n  maxsize?: number;\n};\n\ntype Prefix<A extends string, B extends { [key: string]: any }> = keyof B extends string\n  ? {\n      [K in keyof B as `${A}${K}`]: B[K];\n    }\n  : never;\n\ntype AllParams = {\n  title?: string;\n  pageid?: number;\n  namespace?: Namespace | Namespace[] | \"*\";\n  dir?: \"ascending\" | \"descending\";\n  filterredir?: \"all\" | \"nonredirects\" | \"redirects\";\n  limit?: number | \"max\";\n  redirect?: boolean;\n  prop?: (\"pageid\" | \"title\" | \"redirect\")[];\n  show?: \"redirect\" | \"!redirect\" | (\"redirect\" | \"!redirect\")[];\n};\n\nexport async function getLinks(title: string): Promise<string[]> {\n  let links = await api({\n    titles: title,\n    generator: \"links\",\n    gplnamespace: 0,\n    gpllimit: \"max\",\n  });\n\n  return (_.isPlainObject(links) ? [links] : links)\n    .filter((link) => !link.missing)\n    .map(_.iteratee(\"title\"));\n}\n\nexport async function getBacklinks(title: string): Promise<string[]> {\n  // For some reason, blredirect: true does not work with list: 'backlinks',\n  // but gblredirect: true with generator: 'backlinks' _does_, so we use the latter /shrug\n  let backlinks = await api({\n    gbltitle: title,\n    generator: \"backlinks\",\n    gblnamespace: 0,\n    gbllimit: \"max\",\n    gblredirect: true,\n  });\n\n  return (!backlinks ? [] : _.isPlainObject(backlinks) ? [backlinks] : backlinks).map(\n    _.iteratee(\"title\")\n  );\n}\n\nexport async function search(query: string): Promise<string[]> {\n  let results: [string, string[], string[], string[]] = await api({\n    action: \"opensearch\",\n    search: query,\n    namespace: 0,\n    limit: 5,\n  });\n\n  let [, titles, summaries, urls] = results;\n\n  let pages = _.zip(titles, summaries, urls).map(([title, summary, url]) => ({\n    title,\n    summary,\n    url,\n  }));\n\n  return pages.map(_.iteratee(\"title\"));\n}\n\nexport async function getImages(title: string) {\n  let results = await api({\n    titles: title,\n    generator: \"images\",\n    gimlimit: \"max\",\n    prop: [\"imageinfo\", \"info\"],\n    iilimit: \"max\",\n    iiprop: [\n      \"url\",\n      \"size\",\n      \"canonicaltitle\",\n      \"mime\",\n      \"thumbmime\",\n      \"user\",\n      \"mediatype\",\n      \"comment\",\n      \"parsedcomment\",\n    ],\n  });\n\n  if (_.isPlainObject(results)) {\n    results = [results];\n  }\n\n  return _.uniqBy(\n    (results || [])\n      .filter(\n        (result) =>\n          ![\n            \"Wiktionary-logo.svg\",\n            \"Wikibooks-logo.svg\",\n            \"Commons-logo.svg\",\n            \"1rightarrow blue.svg\",\n            \"Disambig-dark.svg\",\n            \"Nuvola single chevron right.svg\",\n            \"Portal.svg\",\n            \"Crystal Clear app package network.png\",\n            \"Internet-web-browser.svg\",\n            \"Wikivoyage-Logo-v3-icon.svg\",\n            \"Wikisource-logo.svg\",\n            \"Wikinews-logo.svg\",\n            \"Red pog.svg\",\n            \"Esculaap4.svg\",\n            \"Portal icon.svg\",\n            \"Speakerlink.svg\",\n            \"Brosen windrose nl.svg\",\n          ]\n            .map((file) => \"Bestand:\" + file)\n            .includes(result.title) && !result.title.startsWith(\"Bestand:P \")\n      )\n      .map((result: any) => ({\n        ..._.omit(result, \"imageinfo\"),\n        ...result.imageinfo[0],\n      }))\n      .filter((result) => result.width > 75 && result.height > 75),\n    _.iteratee(\"url\")\n  );\n}\n\nexport async function getFileUsage(\n  title: string\n): Promise<{ title: string; url: string }[]> {\n  let results = await api({\n    titles: title,\n    prop: \"globalusage\",\n    gusite: \"nlwiki\",\n    gunamespace: 0,\n    gulimit: \"max\",\n    guprop: [\"url\"],\n  });\n\n  return results.globalusage;\n}\n","import _ from \"lodash\";\nimport Chance from \"chance\";\nimport { getLinks, getBacklinks } from \"./wiki\";\nconst chance = new Chance();\n\nexport type Id = string;\n\nexport type Vertex = {\n  id: Id;\n};\n\nexport type Edge = {\n  id: Id;\n  source: Id;\n  target: Id;\n};\n\nconst getVertex = <T extends Vertex>(vertices: Map<Id, T>, id: Id) => vertices.get(id)!;\n\nconst setVertex = <T extends Vertex>(vertices: Map<Id, T>, vertex: T) =>\n  void vertices.set(vertex.id, vertex);\n\nconst getEdge = <U extends Vertex>(edges: Map<Id, U>, id: Id) => edges.get(id)!;\n\nconst setEdge = <U extends Edge>(edges: Map<Id, U>, edge: U) =>\n  void edges.set(edge.id, edge);\n\nconst firstVertex = <T extends Vertex>(vertices: Map<Id, T>) => {\n  for (let key of vertices.keys()) {\n    return getVertex(vertices, key);\n  }\n};\n\nexport type Degrees = {\n  degree: number;\n  inDegree: number;\n  outDegree: number;\n};\n\nexport type Position = {\n  x: number;\n  y: number;\n};\n\nclass Graph<T extends Vertex = Vertex, U extends Edge = Edge> {\n  private _vertices = new Map<Id, T>();\n  private _edges = new Map<Id, U>();\n\n  get vertices() {\n    return [...this._vertices.values()];\n  }\n\n  get edges() {\n    return [...this._edges.values()];\n  }\n\n  getVertex(id: Id) {\n    return getVertex(this._vertices, id);\n  }\n\n  toJSON() {\n    return {\n      vertices: this.vertices,\n      edges: this.edges,\n    };\n  }\n\n  constructor(vertices?: T[] | Map<Id, T>, edges?: U[] | Map<Id, U>) {\n    if (vertices) {\n      if (vertices instanceof Map) {\n        this._vertices = vertices;\n      } else {\n        for (let i = 0; i < vertices.length; i++) {\n          let vertex = vertices[i];\n          this._vertices.set(vertex.id, vertex);\n        }\n      }\n    }\n\n    if (edges) {\n      if (edges instanceof Map) {\n        this._edges = edges;\n      } else {\n        for (let i = 0; i < edges.length; i++) {\n          let edge = edges[i];\n          this._edges.set(edge.id, edge);\n        }\n      }\n    }\n  }\n\n  map<A extends Vertex, B extends Edge = U>(\n    f: (vertex: T, graph: this) => A,\n    g?: (edge: U, graph: this) => B\n  ) {\n    let [vertices, edges] = [new Map(), new Map()];\n\n    this._edges.forEach((edge) => {\n      let source = getVertex(this._vertices, edge.source);\n      let target = getVertex(this._vertices, edge.target);\n\n      let newSource = f(source, this);\n      let newTarget = f(target, this);\n      setVertex(vertices, newSource);\n      setVertex(vertices, newTarget);\n\n      let newEdge = g ? g(edge, this) : edge;\n      newEdge.source = newSource.id;\n      newEdge.target = newTarget.id;\n      setEdge(edges, newEdge);\n    });\n\n    return new Graph<A, B>(vertices, edges);\n  }\n\n  filter(predicate: (vertex: T) => boolean) {\n    let [vertices, edges] = [new Map<Id, T>(), new Map<Id, U>()];\n\n    this._edges.forEach((edge) => {\n      let source = getVertex(this._vertices, edge.source);\n      let target = getVertex(this._vertices, edge.target);\n\n      let keepSource = predicate(source);\n      let keepTarget = predicate(target);\n\n      if (keepSource) {\n        setVertex(vertices, source);\n      }\n\n      if (keepTarget) {\n        setVertex(vertices, target);\n      }\n\n      if (keepSource && keepTarget) {\n        setEdge(edges, edge);\n      }\n    });\n\n    return new Graph(vertices, edges);\n  }\n\n  calculateDegrees(): Graph<T & Degrees & { connections: Id[] }, U> {\n    let [vertices, edges] = [\n      new Map<Id, T & Degrees & { connections: Id[] }>(this._vertices as any),\n      new Map(this._edges),\n    ];\n\n    vertices.forEach((vertex) => {\n      ([\"degree\", \"inDegree\", \"outDegree\"] as const).forEach((key) => {\n        vertex[key] = 0;\n      });\n\n      vertex.connections = [];\n    });\n\n    edges.forEach((edge) => {\n      let source = getVertex(vertices, edge.source);\n      let target = getVertex(vertices, edge.target);\n\n      source.outDegree += 1;\n      source.degree += 1;\n      target.inDegree += 1;\n      target.degree += 1;\n\n      source.connections.push(target.id);\n      target.connections.push(source.id);\n    });\n\n    return new Graph<T & Degrees & { connections: Id[] }, U>(vertices, edges);\n  }\n\n  layout(\n    titles: string[],\n    {\n      // initialAngle = Math.PI * (3 - Math.sqrt(5)),\n      initialAngle = (2 * Math.PI) / titles.length,\n      initialRadius = 10,\n    }: {\n      initialAngle?: number;\n      initialRadius?: number;\n    } = {\n      // initialAngle: Math.PI * (3 - Math.sqrt(5)),\n      initialAngle: (2 * Math.PI) / titles.length,\n      initialRadius: 10,\n    }\n  ): T extends Degrees\n    ? Graph<T & Position, U & { from: Position; to: Position }>\n    : never {\n    let [vertices, edges] = [\n      new Map<Id, T & Degrees & Partial<Position>>(this._vertices as any),\n      new Map<Id, U & Partial<{ from: Position; to: Position }>>(this._edges),\n    ];\n\n    if (vertices.size === 0) {\n      return this as any;\n    }\n\n    if (!firstVertex(vertices)?.degree) {\n      throw new Error();\n    }\n\n    let maxDegree = 0;\n    let i = 0;\n\n    vertices.forEach((vertex) => {\n      if (vertex.degree > maxDegree) {\n        maxDegree = vertex.degree;\n      }\n\n      if (titles.includes(vertex.id)) {\n        let [angle, radius] = [initialAngle * i, initialRadius * Math.sqrt(0.5 + i)];\n\n        vertex.x = radius * Math.cos(angle);\n        vertex.y = radius * Math.sin(angle);\n        i += 1;\n      }\n    });\n\n    edges.forEach((edge) => {\n      // We're basing the layout of our nodes on their first link to a titleVertex,\n      // so bail out if we're dealing with none or only titleVertices\n      if (\n        titles.filter((title) => title === edge.source || title === edge.target)\n          .length !== 1\n      ) {\n        return;\n      }\n\n      let [titleVertex, me] = (titles.includes(edge.source)\n        ? [edge.source, edge.target]\n        : [edge.target, edge.source]\n      ).map((x) => getVertex(vertices, x));\n\n      if (_.isUndefined(me.x) && _.isUndefined(me.y)) {\n        const angle = _.random(0, 2 * Math.PI);\n        const mean = initialRadius / 4 + (titleVertex.degree ** 2 / maxDegree ** 2) * 3;\n        const radius =\n          chance.normal({\n            mean,\n            dev: mean / 6,\n          }) +\n          me.inDegree / 2;\n\n        me.x = titleVertex.x! + radius * Math.cos(angle);\n        me.y = titleVertex.y! + radius * Math.sin(angle);\n      }\n    });\n\n    // If there's still nodes without positions (can happen if they have no links to titleNodes,\n    // for example), we still need to give 'em a position\n    edges.forEach((edge) => {\n      let source = getVertex(vertices, edge.source);\n      let target = getVertex(vertices, edge.target);\n\n      if (!source.x && !source.y) {\n        source.x = _.random(-initialRadius, initialRadius, true);\n        source.y = _.random(-initialRadius, initialRadius, true);\n      }\n\n      if (!target.x && !target.y) {\n        target.x = _.random(-initialRadius, initialRadius, true);\n        target.y = _.random(-initialRadius, initialRadius, true);\n      }\n\n      edge.from = { x: source.x!, y: source.y! };\n      edge.to = { x: target.x!, y: target.y! };\n    });\n\n    return new Graph(\n      vertices as Map<Id, T & Degrees & Position>,\n      edges as Map<Id, U & { from: Position; to: Position }>\n    ) as any;\n  }\n}\n\nconst makeVertex = (id: Id): Vertex => ({ id });\n\nasync function buildGraph(titles: string[]) {\n  let { vertices, edges } = (\n    await Promise.all(\n      titles.map(async (title) => {\n        let [links, backlinks] = await Promise.all([\n          // getLinks(title),\n          [],\n          getBacklinks(title),\n        ]);\n\n        return {\n          title,\n          links,\n          backlinks,\n        };\n      })\n    )\n  ).reduce(\n    ({ vertices, edges }, { title, links, backlinks }) => ({\n      vertices: [\n        ...vertices,\n        makeVertex(title),\n        ...backlinks.map(makeVertex),\n        // ...links.map(makeVertex),\n      ],\n      edges: [\n        ...edges,\n        ...backlinks.map((source) => ({\n          id: `${source}->${title}`,\n          source,\n          target: title,\n        })),\n        // ...links.map((target) => ({\n        //   id: `${title}->${target}`,\n        //   source: title,\n        //   target,\n        // })),\n      ],\n    }),\n    { vertices: [] as Vertex[], edges: [] as Edge[] }\n  );\n\n  let graph = new Graph(vertices, edges).calculateDegrees();\n\n  if (titles.length > 1) {\n    graph = graph.filter((vertex) => vertex.degree > 1).calculateDegrees();\n  }\n\n  return graph\n    .map(\n      (vertex) => {\n        let radius = 5 + _.clamp(2 * vertex.degree, 0, 15);\n\n        let color = titles.includes(vertex.id)\n          ? vertex.id === titles[titles.length - 1]\n            ? \"#f5540a\"\n            : \"#f5ba17\"\n          : \"#2dd4c7\";\n\n        return {\n          ...vertex,\n          radius,\n          color,\n        } as typeof vertex & { radius: number; color: string };\n      },\n      (edge, graph) => {\n        let source = graph.getVertex(edge.source);\n        let target = graph.getVertex(edge.target);\n\n        let weight = 0.1 + Math.min(source.degree, target.degree) / 12;\n\n        return {\n          ...edge,\n          weight,\n        } as typeof edge & { weight: number };\n      }\n    )\n    .layout(titles, { initialRadius: 1000 });\n}\n\ntype UnwrapPromise<T> = T extends Promise<infer U> ? U : never;\n\ntype DisplayGraph = UnwrapPromise<ReturnType<typeof buildGraph>>;\n\nexport default Graph;\nexport { buildGraph };\nexport type { DisplayGraph };\n","import create, { State, StateCreator } from \"zustand\";\nimport produce, { Draft } from \"immer\";\nimport { Vertex, DisplayGraph } from \"../graph\";\n\nconst immer = <T extends State>(\n  config: StateCreator<T, (fn: (draft: Draft<T>) => void) => void>\n): StateCreator<T> => (set, get, api) =>\n  config((fn) => set(produce(fn) as (state: T) => T), get, api);\n\ntype Data = {\n  [key: string]: {\n    in: number | string;\n    out: number | string;\n    degree: number | string;\n  };\n};\n\nconst useStore = create<{\n  titles: string[];\n  graph?: DisplayGraph;\n  data?: Data;\n  setTitles: (titles: string[] | ((oldTitles: string[]) => string[])) => void;\n  setGraph: (graph?: DisplayGraph) => void;\n  setData: (data?: Data) => void;\n  clicked?: Vertex;\n  setClicked: (vertex?: Vertex) => void;\n}>(\n  immer((set, get) => ({\n    titles: [],\n    graph: undefined,\n    data: undefined,\n    setTitles: (titles) => {\n      set(() => ({\n        titles: typeof titles === \"function\" ? titles(get().titles) : titles,\n      }));\n    },\n    setGraph: (graph) => {\n      set(() => ({\n        graph,\n      }));\n    },\n    setData: (data) => {\n      set(() => ({\n        data,\n      }));\n    },\n    clicked: undefined,\n    setClicked: (vertex) => {\n      set(() => ({\n        clicked: vertex,\n      }));\n    },\n  }))\n);\n\nexport { useStore };\nexport type { Data };\n","import Input from \"./Input\";\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport * as wiki from \"ts/wiki\";\nimport \"./Input.css\";\n\nconst Input = React.forwardRef<\n  HTMLInputElement,\n  {\n    onResultClick?: (result: string) => void;\n    width?: number | string;\n    height?: number;\n  }\n>(\n  (\n    { onResultClick = () => {}, width = \"clamp(200px, 25vw, 400px)\", height = 60 },\n    ref\n  ) => {\n    const [value, setValue] = useState(\"\");\n    const [results, setResults] = useState<string[]>([]);\n    const [loading, setLoading] = useState(false);\n    const debouncedAutocomplete = useRef(\n      _.debounce(async (input: string) => {\n        setLoading(true);\n\n        try {\n          let results = await wiki.search(input);\n          setResults(results);\n        } catch {\n        } finally {\n          setLoading(false);\n        }\n      }, 1000)\n    );\n\n    const resetInput = () => {\n      setValue(\"\");\n      setResults([]);\n      debouncedAutocomplete.current.cancel();\n    };\n\n    return (\n      <div style={{ position: \"relative\", width }}>\n        <div\n          className=\"search\"\n          style={{\n            height,\n            display: \"grid\",\n            gridTemplateRows: `${height}px`,\n            gridTemplateColumns: \"minmax(0, 1fr) 100px\",\n            boxShadow: \"0px 5px 10px rgba(0,0,0,0.19), 2px 2px 5px rgba(0,0,0,0.20)\",\n          }}\n        >\n          <input\n            ref={ref}\n            type=\"text\"\n            value={value}\n            placeholder=\"Search!\"\n            style={{ fontSize: 22 }}\n            onChange={({ target: { value } }) => {\n              setValue(value);\n\n              if (value.length === 0) {\n                debouncedAutocomplete.current.cancel();\n                setResults([]);\n              } else {\n                debouncedAutocomplete.current(value);\n              }\n            }}\n            onKeyDown={(event) => {\n              switch (event.key) {\n                case \"Enter\": {\n                  if (results.length === 0) {\n                    return;\n                  }\n\n                  onResultClick(results[0]);\n                  resetInput();\n                  break;\n                }\n                case \"Escape\": {\n                  resetInput();\n                  break;\n                }\n              }\n            }}\n          />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"row\",\n              justifyContent: \"flex-end\",\n            }}\n          >\n            {value.length > 0 && (\n              <button\n                className=\"clear-button\"\n                onClick={() => {\n                  resetInput();\n                  (ref as React.MutableRefObject<HTMLInputElement>).current?.focus();\n                }}\n              >\n                <i className=\"icon ion-android-close\" />\n              </button>\n            )}\n            {loading ? (\n              <button disabled={true}>\n                <div className=\"loader\" />\n              </button>\n            ) : (\n              <button\n                className=\"search-button\"\n                onClick={(event) => {\n                  event.preventDefault();\n\n                  if (value.length > 0) {\n                    debouncedAutocomplete.current.flush();\n                  }\n                }}\n              >\n                <i className=\"icon ion-android-search\" />\n              </button>\n            )}\n          </div>\n        </div>\n        <div\n          className=\"results\"\n          style={{\n            zIndex: 999,\n            position: \"absolute\",\n            top: \"100%\",\n            width,\n            overflow: \"hidden\",\n            boxShadow: \"0px 5px 10px rgba(0,0,0,0.19), 2px 2px 5px rgba(0,0,0,0.20)\",\n          }}\n        >\n          {results.map((result) => (\n            <div\n              key={result}\n              className=\"result\"\n              onClick={() => {\n                onResultClick(result);\n                resetInput();\n              }}\n            >\n              {result.slice(0, value.length).toLowerCase() === value.toLowerCase() ? (\n                <>\n                  <span\n                    style={{\n                      fontWeight: \"bold\",\n                    }}\n                  >\n                    {result.slice(0, value.length)}\n                  </span>\n                  <span>{result.slice(value.length)}</span>\n                </>\n              ) : (\n                <span>{result}</span>\n              )}\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n);\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport type { Data } from \"ts/hooks/useStore\";\n\ntype Page = {\n  title: string;\n};\n\ntype Column = {\n  id: string;\n  label: string;\n  align?: \"left\" | \"right\" | \"justify\" | \"center\";\n};\n\ntype Order = \"asc\" | \"desc\";\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator<Key extends string>(\n  order: Order,\n  orderBy: Key\n): (a: any, b: any) => number {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"red\",\n    \"&:hover\": {\n      color: \"blue\",\n    },\n    \"&$active\": {\n      color: \"green\",\n    },\n  },\n  active: {},\n  icon: {\n    color: \"inherit !important\",\n  },\n});\n\ntype Row = {\n  id: string;\n  title: string;\n} & Data[keyof Data];\n\nconst Pages = ({\n  pages,\n  data,\n  removeTitle,\n}: {\n  pages: Page[];\n  data?: Data;\n  removeTitle: (title: string) => void;\n}) => {\n  const [order, setOrder] = useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] = useState<string>(\"index\");\n  const styles = useStyles();\n\n  const sort = (key: string) => {\n    const isAsc = orderBy === key && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(key);\n  };\n\n  const rows: Row[] = pages.map(({ title }) => ({\n    id: title,\n    title,\n    ...(data?.[title] || { in: \"?\", out: \"?\", degree: \"?\" }),\n  }));\n\n  const columns: Column[] = [\n    {\n      id: \"title\",\n      label: \"Title\",\n      align: \"left\",\n    },\n    {\n      id: \"in\",\n      label: \"In\",\n      align: \"right\",\n    },\n    {\n      id: \"out\",\n      label: \"Out\",\n      align: \"right\",\n    },\n    {\n      id: \"degree\",\n      label: \"Degree\",\n      align: \"right\",\n    },\n  ];\n\n  const firstCellWidth = 125;\n  const cellWidth = 50;\n\n  return (\n    <TableContainer\n      component={Paper}\n      style={{\n        maxHeight: \"40vh\",\n        boxShadow: \"0px 5px 10px rgba(0,0,0,0.19), 2px 2px 5px rgba(0,0,0,0.20)\",\n        background: \"var(--input-background)\",\n      }}\n    >\n      <Table stickyHeader style={{ color: \"hsl(227, 18%, 70%)\", width: \"unset\" }}>\n        <TableHead>\n          <TableRow>\n            {columns.map((column, i) => (\n              <TableCell\n                key={column.id}\n                align={column.align || \"right\"}\n                size=\"small\"\n                style={{\n                  borderBottom: rows.length === 0 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: `6px ${i === columns.length - 1 ? 10 : 0}px 6px ${\n                    i === 0 ? 10 : 0\n                  }px`,\n                  background: \"var(--input-background)\",\n                  ...(i === 0\n                    ? {\n                        maxWidth: firstCellWidth,\n                      }\n                    : { width: cellWidth }),\n                }}\n              >\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={orderBy === column.id ? order : \"asc\"}\n                  onClick={() => sort(column.id)}\n                  classes={{\n                    root: styles.root,\n                    active: styles.active,\n                    icon: styles.icon,\n                  }}\n                  style={{\n                    color: \"hsl(227, 18%, 70%)\",\n                    fontSize: \"1.1em\",\n                  }}\n                >\n                  {column.label}\n                  {orderBy === column.id ? (\n                    <span\n                      style={{\n                        border: 0,\n                        clip: \"rect(0 0 0 0)\",\n                        height: 1,\n                        margin: -1,\n                        overflow: \"hidden\",\n                        padding: 0,\n                        position: \"absolute\",\n                        top: 20,\n                        width: 1,\n                      }}\n                    >\n                      {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                    </span>\n                  ) : null}\n                </TableSortLabel>\n              </TableCell>\n            ))}\n            <TableCell\n              style={{\n                width: 25,\n                padding: 0,\n                background: \"var(--input-background)\",\n                borderBottom: rows.length === 0 ? \"none\" : \"1.5px solid #5e9a9e\",\n              }}\n            ></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {stableSort(rows, getComparator(order, orderBy)).map((row, i) => (\n            <TableRow key={row.title}>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                size=\"small\"\n                style={{\n                  color: \"hsl(227, 18%, 75%)\",\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: \"6px 0px 6px 10px\",\n                  maxWidth: firstCellWidth,\n                  fontSize: \"0.9em\",\n                }}\n              >\n                {row.title}\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                size=\"small\"\n                style={{\n                  color: \"hsl(227, 18%, 75%)\",\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: \"6px 0px 6px 0px\",\n                  width: cellWidth,\n                  fontSize: \"0.9em\",\n                }}\n              >\n                {row.in}\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                size=\"small\"\n                style={{\n                  color: \"hsl(227, 18%, 75%)\",\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: \"6px 0px 6px 0px\",\n                  width: cellWidth,\n                  fontSize: \"0.9em\",\n                }}\n              >\n                {row.out}\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                size=\"small\"\n                style={{\n                  color: \"hsl(227, 18%, 75%)\",\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: \"6px 10px 6px 0px\",\n                  width: cellWidth,\n                  fontSize: \"0.9em\",\n                }}\n              >\n                {row.degree}\n              </TableCell>\n              <TableCell\n                style={{\n                  padding: 0,\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                }}\n              >\n                <button\n                  onClick={() => removeTitle(row.title)}\n                  style={{\n                    width: 22,\n                    height: 20,\n                    fontSize: 20,\n                    marginTop: 2,\n                  }}\n                >\n                  <i className=\"icon ion-android-close\" />\n                </button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Pages;\n","import React, { useState, useMemo, useEffect, useCallback, useRef } from \"react\";\nimport * as three from \"three\";\nimport { useThree, useUpdate } from \"react-three-fiber\";\nimport type { DisplayGraph } from \"ts/graph\";\nimport { useStore } from \"ts/hooks/useStore\";\nimport { Html } from \"@react-three/drei\";\nimport { OrthographicCamera } from \"three\";\n\nconst HoverInfo = ({\n  vertex: { id, x, y, color, radius },\n}: {\n  vertex: { id: string; x: number; y: number; color: string; radius: number };\n}) => (\n  <Html position={[x + radius, y, 1]} scaleFactor={2} zIndexRange={[0, 100]}>\n    <div\n      style={{\n        background: \"white\",\n        padding: 3,\n        borderRadius: 2,\n        width: \"100%\",\n        whiteSpace: \"nowrap\",\n      }}\n    >\n      {id}\n    </div>\n  </Html>\n);\n\nconst dummyObject = new three.Object3D();\nconst dummyColor = new three.Color();\n\nconst Graph = ({ graph: { vertices, edges } }: { graph: DisplayGraph }) => {\n  const setClicked = useStore((state) => state.setClicked);\n  const [hovered, setHovered] = useState<{ instanceId: number; id: string }>();\n  let { camera } = useThree();\n\n  const nodeMesh = useUpdate<three.InstancedMesh>(\n    (mesh) => {\n      vertices.forEach((vertex, i) => {\n        dummyObject.position.set(vertex.x, vertex.y, 0);\n        dummyObject.scale.set(vertex.radius, vertex.radius, 1);\n        dummyObject.updateMatrix();\n        mesh.setMatrixAt(i, dummyObject.matrix);\n\n        dummyColor.set(vertex.color);\n        mesh.setColorAt(i, dummyColor);\n      });\n\n      mesh.instanceMatrix.needsUpdate = true;\n    },\n    [vertices]\n  );\n\n  const edgeGeometry = useUpdate<three.BufferGeometry>(\n    (geometry) => {\n      geometry.setFromPoints(\n        edges\n          .map(({ from, to }) => [\n            new three.Vector3(from.x, from.y, -1),\n            new three.Vector3(to.x, to.y, -1),\n          ])\n          .flat(1)\n      );\n\n      geometry.computeBoundingSphere();\n    },\n    [edges]\n  );\n\n  const { edgeColors } = useMemo(() => {\n    const edgeColors = Float32Array.from(\n      edges\n        .map((edge, i) =>\n          hovered && hovered.id !== edge.source && hovered.id !== edge.target\n            ? [\n                [0.086, 0.086, 0.11],\n                [0.086, 0.086, 0.11],\n              ]\n            : [\n                [0.2, 0.6, 0.9],\n                [0.7, 0.2, 0.1],\n              ]\n        )\n        .flat(2)\n    );\n\n    return { edgeColors };\n  }, [edges, hovered]);\n\n  const setColor = useCallback(\n    (id: number, color: three.Color | string) => {\n      dummyColor.set(color);\n      nodeMesh.current!.setColorAt(id, dummyColor);\n      nodeMesh.current!.instanceColor!.needsUpdate = true;\n    },\n    [nodeMesh]\n  );\n\n  useEffect(() => {\n    if (hovered !== undefined) {\n      vertices.forEach((vertex, i) => {\n        if (!vertex.connections.includes(hovered.id)) {\n          setColor(i, \"#16161b\");\n        }\n      });\n\n      setColor(hovered.instanceId, \"#f06\");\n    } else {\n      vertices.forEach((vertex, i) => {\n        setColor(i, vertex.color);\n      });\n    }\n  }, [hovered, setColor]);\n\n  return (\n    <>\n      <instancedMesh\n        // We set the `key` prop such that React recreates it everytime `vertices.length` changes,\n        // this is because we can't increase the count of an InstancedMesh without recreating it\n        key={\n          vertices[0].id +\n          vertices.length +\n          vertices[(vertices.length || 1) - 1].id +\n          edges[0].id +\n          edges.length +\n          edges[(edges.length || 1) - 1].id\n        }\n        ref={nodeMesh}\n        args={[null!, null!, vertices.length]}\n        onPointerOut={({ instanceId }) => {\n          if (instanceId === undefined) {\n            return;\n          }\n\n          let vertex = vertices[instanceId];\n\n          setColor(instanceId, vertex.color);\n          setHovered(undefined);\n        }}\n        onPointerMove={({ instanceId }) => {\n          if (instanceId === undefined) {\n            return;\n          }\n\n          let vertex = vertices[instanceId];\n\n          if (hovered === undefined) {\n            setHovered({ instanceId, id: vertex.id });\n            return;\n          }\n\n          if (hovered.instanceId !== instanceId) {\n            setColor(hovered.instanceId, vertex.color);\n            setHovered({ instanceId, id: vertex.id });\n          }\n        }}\n        onPointerUp={({ instanceId }) => {\n          if (instanceId === undefined) {\n            return;\n          }\n\n          let vertex = vertices[instanceId];\n          setClicked(vertex);\n        }}\n      >\n        <circleBufferGeometry args={[1, 30]} />\n        <meshBasicMaterial />\n      </instancedMesh>\n      {hovered !== undefined && <HoverInfo vertex={vertices[hovered.instanceId]} />}\n      <lineSegments>\n        <bufferGeometry ref={edgeGeometry} attach=\"geometry\">\n          <bufferAttribute\n            attachObject={[\"attributes\", \"color\"]}\n            args={[edgeColors, 3]}\n          />\n        </bufferGeometry>\n        <lineBasicMaterial\n          attach=\"material\"\n          vertexColors\n          color=\"white\"\n          transparent\n          opacity={0.3}\n          linewidth={0.5}\n        />\n      </lineSegments>\n      {/* <primitive ref={nodeMesh} object={instancedNodeMesh} /> */}\n      {/* <instancedMesh ref={nodeMesh} args={[null!, null!, 100000]}>\n        <circleBufferGeometry args={[1, 30]} />\n        <meshBasicMaterial />\n      </instancedMesh> */}\n      {/* <lineSegments args={[geom]}>\n        <lineBasicMaterial color={\"white\"} linewidth={10} />\n      </lineSegments> */}\n      {/* </instancedMesh> */}\n      {/* <instancedMesh ref={edgeMesh} args={[null!, null!, 10000]}>\n        <meshLine\n          attach=\"geometry\"\n          points={edges\n            .map(({ from, to }) => [\n              new three.Vector3(from.x, from.y, -1),\n              new three.Vector3(to.x, to.y, -1),\n            ])\n            .flat(1)}\n        ></meshLine>\n        <meshLineMaterial attach=\"material\" lineWidth={2} />\n      </instancedMesh> */}\n      {/* <group matrixAutoUpdate={false}>\n        {edges.map((edge) => {\n          return (\n            <mesh>\n              <meshLine\n                attach=\"geometry\"\n                points={[\n                  new three.Vector3(edge.from.x, edge.from.y, -1),\n                  new three.Vector3(edge.to.x, edge.to.y, -1),\n                ]}\n              />\n              <meshLineMaterial attach=\"material\" lineWidth={0.5} />\n            </mesh>\n          );\n        })}\n      </group> */}\n    </>\n  );\n};\n\nexport default Graph;\n","import { useState, useEffect } from \"react\";\n\nconst getSize = () => ({\n  vw: Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0) / 100,\n  vh: Math.max(document.documentElement.clientHeight || 0, window.innerHeight || 0) / 100,\n});\n\nconst useWindowSize = () => {\n  let [windowSize, setWindowSize] = useState(getSize());\n\n  const handleResize = () => {\n    setWindowSize(getSize());\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  });\n\n  return windowSize;\n};\n\nexport default useWindowSize;\n","// Adapted from: https://github.com/AustinGomez/react-image-grid\n// I needed video elements too 🙃\nimport { useState, useCallback, useMemo } from \"react\";\nimport { beautifyTitle } from \"ts/utils\";\n\ntype MediaData = {\n  width: number;\n  height: number;\n  src: string;\n  title: string;\n};\n\ntype Image = MediaData & { mediatype: \"BITMAP\"; alt: string };\n\ntype Video = MediaData & { mediatype: \"VIDEO\" };\n\ntype Media = Image | Video;\n\nconst Grid = ({\n  media,\n  rowHeight,\n  width,\n  margin = 0,\n  onClick = () => {},\n}: {\n  media: Media[];\n  rowHeight: number;\n  width: number;\n  margin?: number;\n  onClick?: (media: Media) => void;\n}) => {\n  // Creates <img/> or <video/> tags from media and row metadata.\n  const mediaDataToTag = useCallback(\n    (\n      media: [Media, number],\n      totalIndex: number,\n      rowIndex: number,\n      row: [Media, number][],\n      mediaWidth: number\n    ) => {\n      const calculatedRowHeight = width / mediaWidth;\n\n      // Calculate the dimensions and margin of each media. This needs\n      // to be inline since we need some values from the JS.\n      let style = {\n        height: calculatedRowHeight + \"px\",\n\n        // Take back out the margin from the ratio.\n        width: calculatedRowHeight * media[1] - margin + \"px\",\n\n        // Don't add margin to the last item in a row\n        marginRight: rowIndex === row.length - 1 ? 0 : margin + \"px\",\n\n        // idk?\n        verticalAlign: \"bottom\",\n        cursor: \"pointer\",\n      };\n\n      if (media[0].mediatype === \"BITMAP\") {\n        const image = media as [Image, number];\n\n        const beautifulTitle = beautifyTitle(image[0].title);\n\n        return (\n          <img\n            style={style}\n            data-index={totalIndex}\n            src={image[0].src}\n            title={beautifulTitle}\n            alt={image[0].alt}\n            key={\"img_\" + image[0].src + \"_\" + image[1]}\n            onClick={(event) => {\n              // setSelectedIndex(\n              //   parseInt((target as HTMLImageElement).getAttribute(\"data-index\")!, 10)\n              // );\n              event.preventDefault();\n              onClick(image[0]);\n            }}\n          />\n        );\n      } else {\n        const video = media as [Video, number];\n\n        const beautifulTitle = beautifyTitle(video[0].title);\n\n        return (\n          <video\n            controls\n            style={{ ...style, objectFit: \"cover\" }}\n            data-index={totalIndex}\n            src={video[0].src + \"#t=0.5\"}\n            title={beautifulTitle}\n            preload=\"metadata\"\n            key={\"vid_\" + video[0].src + \"_\" + video[1]}\n            onLoadStart={({ target }) => {\n              (target as HTMLVideoElement).volume = 0.15;\n            }}\n            onClick={(event) => {\n              event.preventDefault();\n\n              const target = event.target as HTMLVideoElement;\n              if (!target.paused) {\n                target.pause();\n              }\n\n              onClick(video[0]);\n            }}\n          />\n        );\n      }\n    },\n    [margin, width, onClick]\n  );\n\n  // Build the rows of the grid. Each row must have an aspect ratio of at least minAspectRatio.\n  // Then, each image in the row is scaled up to fill the desired width of the row, while maintaining\n  // the aspect ratio of each photo in the row.\n  const rows = useMemo(() => {\n    let allRows: JSX.Element[][] = [];\n    let row: [Media, number][] = [];\n    let widthSoFar = 0;\n\n    // We'll use this value to calculate how many pictures we need in a row.\n    // The \"min\" aspect ratio is the aspect ratio that will allow the row to\n    // span the correct length while being between minRowHeight and maxRowHeight\n    const minAspectRatio = width / rowHeight;\n\n    for (let i = 0; i < media.length; i++) {\n      let image = media[i];\n\n      // Add the margin into the ratio.\n      let ratio = image.width / image.height;\n\n      // If we're less than the min aspectRatio then keep adding more items to the row.\n      if (widthSoFar <= minAspectRatio && i !== media.length - 1) {\n        // Add the ratio contributed by the margin.\n        ratio += margin / image.height;\n        row.push([image, ratio]);\n        widthSoFar += ratio;\n      } else {\n        if (i === media.length - 1) {\n          row.push([image, ratio]);\n          widthSoFar += ratio;\n        }\n        let elements: JSX.Element[] = [];\n        for (let j = 0; j < row.length; j++) {\n          elements.push(mediaDataToTag(row[j], i - row.length + j, j, row, widthSoFar));\n        }\n        // Add the finished row to the list of all rows.\n        allRows.push(elements);\n\n        // Start a new row with the current image as the first image\n        row = [[image, ratio]];\n        widthSoFar = ratio;\n      }\n    }\n\n    // This style also needs to be inline since we use the padding prop.\n    // (Would be nice to use something like styled-components for this instead)\n    const divStyle = {\n      display: \"flex\",\n      marginBottom: margin + \"px\",\n    };\n\n    return allRows.map((row, index) => (\n      <div className=\"grid-row\" style={divStyle} key={\"row_\" + index}>\n        {row}\n      </div>\n    ));\n  }, [width, mediaDataToTag, media, margin, rowHeight]);\n\n  return (\n    <div\n      className=\"grid-container\"\n      style={{\n        userSelect: \"none\",\n      }}\n    >\n      {rows}\n    </div>\n  );\n};\n\nexport default Grid;\n","import React, { useState, useEffect, useMemo } from \"react\";\nimport _ from \"lodash\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { animated, useSpring, useTransition } from \"react-spring\";\nimport { getFileUsage, getImages } from \"ts/wiki\";\nimport useWindowSize from \"ts/hooks/useWindowSize\";\nimport { useStore } from \"ts/hooks/useStore\";\nimport { beautifyTitle } from \"ts/utils\";\nimport Grid from \"./Grid\";\n\nconst Bdrop = () => {\n  return (\n    <div\n      style={{\n        zIndex: -1,\n        position: \"fixed\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        right: 0,\n        bottom: 0,\n        top: 0,\n        left: 0,\n        backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n        WebkitTapHighlightColor: \"transparent\",\n      }}\n    />\n  );\n};\n\nconst Fade = React.forwardRef<\n  HTMLDivElement,\n  {\n    in: boolean;\n    children?: React.ReactElement;\n    onEnter?: () => void;\n    onExited?: () => void;\n  }\n>(function Fade({ in: open, children, onEnter, onExited, ...other }, ref) {\n  // const style = useSpring({\n  //   from: { opacity: 0 },\n  //   to: { opacity: open ? 1 : 0 },\n  //   config: {\n  //     duration: 250,\n  //   },\n  //   enter: (isOpen: boolean) => async (next) => {\n  //     if (isOpen && onEnter) {\n  //       onEnter();\n  //     }\n\n  //     await next({ opacity: 1 });\n\n  //     if (!isOpen && onExited) {\n  //       onExited();\n  //     }\n  //   },\n  // });\n\n  const spring = useMemo(() => {\n    return {\n      from: { opacity: 0 },\n      enter: (isOpen: boolean) => async (next) => {\n        if (isOpen && onEnter) {\n          onEnter();\n        }\n\n        await next({ opacity: 1 });\n\n        if (!isOpen && onExited) {\n          onExited();\n        }\n      },\n      leave: (isOpen) => async (next, cancel) => {\n        await next({ opacity: 0 });\n      },\n    };\n  }, [onEnter, onExited]);\n  const transitions = useTransition(open, null, spring as any);\n\n  return (\n    <>\n      {transitions.map(({ item, key, props }) => {\n        return (\n          item && (\n            <animated.div key={key} style={{ ...props, outline: \"none\" }} {...other}>\n              {children}\n            </animated.div>\n          )\n        );\n      })}\n    </>\n  );\n});\n\nconst ImageInfo = ({\n  url,\n  width,\n  height,\n  title,\n  mediatype,\n  onExited,\n}: {\n  url: string;\n  width: number;\n  height: number;\n  title: string;\n  mediatype: \"BITMAP\" | \"VIDEO\";\n  onExited?: () => void;\n}) => {\n  const [usage, setUsage] = useState<{ title: string; url: string }[]>([]);\n  const [open, setOpen] = useState(true);\n\n  const beautifulTitle = beautifyTitle(title);\n\n  useEffect(() => {\n    const main = async () => {\n      const usage = await getFileUsage(title);\n      setUsage(usage);\n    };\n\n    main();\n  }, []);\n\n  return (\n    <Modal\n      open={open}\n      onClose={() => setOpen(false)}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 250,\n        style: {\n          background: \"hsla(0, 0%, 0%, 0.75)\",\n          pointerEvents: \"all\",\n        },\n      }}\n      style={{\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        justifyContent: \"center\",\n        marginTop: \"3vh\",\n      }}\n    >\n      <Fade in={open} onExited={onExited}>\n        <Paper\n          style={{\n            paddingLeft: \"1.75em\",\n            paddingRight: \"1.75em\",\n            paddingTop: \"0.35em\",\n            paddingBottom: \"1em\",\n            width: \"50vw\",\n            maxHeight: \"95vh\",\n          }}\n        >\n          <a\n            href={`https://commons.wikimedia.org/wiki/${title.replace(\n              \"Bestand\",\n              \"File\"\n            )}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            style={{\n              display: \"inline-block\",\n              fontSize: \"1.75em\",\n              fontWeight: \"bold\",\n              marginTop: \"0.5em\",\n              marginBottom: \"0.5em\",\n              color: \"rgba(0, 0, 0, 0.87)\",\n            }}\n          >\n            {beautifulTitle}\n          </a>\n          {mediatype === \"BITMAP\" && (\n            <img\n              src={url}\n              title={title}\n              alt={title}\n              style={{\n                objectFit: \"contain\",\n                width: \"100%\",\n                maxHeight: \"35vh\",\n                objectPosition: \"0 0\",\n              }}\n            />\n          )}\n          {mediatype === \"VIDEO\" && (\n            <video\n              src={url + \"#t=0.5\"}\n              title={title}\n              controls\n              preload=\"metadata\"\n              style={{\n                objectFit: \"contain\",\n                maxHeight: \"35vh\",\n              }}\n              onLoadStart={({ target }) => {\n                (target as HTMLVideoElement).volume = 0.15;\n              }}\n            />\n          )}\n          <h3\n            style={{\n              marginTop: \"0.5em\",\n              marginBottom: \"0.5em\",\n            }}\n          >\n            File usage\n          </h3>\n          <ul\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              paddingLeft: 0,\n              marginTop: 0,\n              marginBottom: \"0.5em\",\n            }}\n          >\n            {usage.map(({ title, url }) => {\n              return (\n                <li\n                  key={title}\n                  style={{\n                    listStyle: \"none\",\n                  }}\n                >\n                  <a href={url} target=\"_blank\" rel=\"noreferrer\">\n                    {title}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n};\n\ntype Image = {\n  url: string;\n  width: number;\n  height: number;\n  title: string;\n  mediatype: string;\n  mime: string;\n};\n\nconst PageInfo = ({ title }: { title: string }) => {\n  const setClicked = useStore((state) => state.setClicked);\n  const [images, setImages] = useState<Image[]>([]);\n  const [highlightedImage, setHighlightedImage] = useState<{\n    width: number;\n    height: number;\n    url: string;\n    title: string;\n    mediatype: \"BITMAP\" | \"VIDEO\";\n  }>();\n  const [open, setOpen] = useState(true);\n  const { vw, vh } = useWindowSize();\n\n  useEffect(() => {\n    const main = async () => {\n      let images = await getImages(title);\n\n      console.log(`images`, images);\n\n      setImages(\n        images\n          .map((image) =>\n            _.pick(image, \"url\", \"width\", \"height\", \"title\", \"mediatype\", \"mime\")\n          )\n          .filter(\n            ({ mediatype }) =>\n              mediatype === \"BITMAP\" || mediatype === \"VIDEO\" || mediatype === \"DRAWING\"\n          )\n      );\n    };\n    main();\n  }, [title]);\n\n  const width = _.clamp(70 * vw, 200, 1000);\n  const rowHeight = _.clamp(20 * vh, 150, 250);\n\n  return (\n    <Modal\n      open={open}\n      onClose={() => setOpen(false)}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: 250,\n      }}\n      style={{\n        display: \"flex\",\n        alignItems: \"flex-start\",\n        justifyContent: \"center\",\n        marginTop: \"9vh\",\n      }}\n    >\n      <Fade in={open} onExited={() => setClicked(undefined)}>\n        <Paper\n          style={{\n            paddingLeft: \"1.75em\",\n            paddingRight: \"1.75em\",\n            paddingTop: \"0.35em\",\n            paddingBottom: \"0.5em\",\n            // width: clamp(200px, 70vw, 1200px),\n            width,\n            maxHeight: \"80vh\",\n            overflowY: \"auto\",\n          }}\n        >\n          <a\n            href={`https://nl.wikipedia.org/wiki/${title.split(\" \").join(\"_\")}`}\n            target=\"_blank\"\n            rel=\"noreferrer\"\n            style={{\n              display: \"inline-block\",\n              fontSize: \"1.75em\",\n              fontWeight: \"bold\",\n              marginTop: \"0.5em\",\n              color: \"rgba(0, 0, 0, 0.87)\",\n            }}\n          >\n            {title}\n          </a>\n          <ul\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              padding: 0,\n            }}\n          >\n            <Grid\n              width={width}\n              rowHeight={rowHeight}\n              onClick={({ src, width, height, title, mediatype }) => {\n                setHighlightedImage({\n                  url: src,\n                  width,\n                  height,\n                  title,\n                  mediatype,\n                });\n              }}\n              media={images.map(({ url, width, height, title = \"\", mediatype }) => {\n                // title = beautifyTitle(title);\n                const shortTitle = title.length > 15 ? title.slice(0, 15) + \"...\" : title;\n\n                return {\n                  width,\n                  height,\n                  src: url,\n                  title,\n                  ...(mediatype === \"VIDEO\"\n                    ? {\n                        mediatype: \"VIDEO\",\n                      }\n                    : {\n                        alt: shortTitle,\n                        mediatype: \"BITMAP\",\n                      }),\n                };\n              })}\n            />\n          </ul>\n          {highlightedImage !== undefined && (\n            <ImageInfo\n              {...highlightedImage}\n              onExited={() => setHighlightedImage(undefined)}\n            />\n          )}\n        </Paper>\n      </Fade>\n    </Modal>\n  );\n};\n\nexport default PageInfo;\n","import React, { Suspense, useState, useRef, useEffect } from \"react\";\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\nimport { Stats, TrackballControls } from \"@react-three/drei\";\nimport * as three from \"three\";\nimport _ from \"lodash\";\nimport { buildGraph, DisplayGraph } from \"ts/graph\";\nimport { useStore, Data } from \"ts/hooks/useStore\";\nimport Input from \"components/Input\";\nimport Pages from \"components/Pages\";\nimport GraphView from \"components/Graph\";\nimport PageInfo from \"components/PageInfo\";\nimport type { TrackballControls as Trackball } from \"three/examples/jsm/controls/TrackballControls\";\n\nconst Scene = ({ graph }: { graph?: DisplayGraph }) => {\n  return (\n    <>\n      <ambientLight />\n      <hemisphereLight color=\"#ffffff\" intensity={1.0} />\n      {/* <pointLight position={[0, 0, 15]} intensity={2.0} color=\"#ffffff\" /> */}\n      {graph && <GraphView graph={graph} />}\n    </>\n  );\n};\n\nconst Controls = () => {\n  const { camera, gl, invalidate } = useThree();\n  const ref = useRef<any>();\n\n  useFrame(() => ref.current!.update());\n\n  useEffect(() => {\n    ref.current.addEventListener(\"change\", invalidate);\n  }, []);\n\n  return (\n    <TrackballControls\n      mouseButtons={{\n        LEFT: three.MOUSE.PAN,\n        MIDDLE: three.MOUSE.MIDDLE,\n        RIGHT: three.MOUSE.ROTATE,\n      }}\n      noRotate\n      panSpeed={15}\n      ref={ref}\n      args={[camera, gl.domElement]}\n      dynamicDampingFactor={0.2}\n      staticMoving={false}\n    />\n  );\n};\n\nconst App = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { graph, titles, data, setGraph, setTitles, setData, clicked } = useStore();\n  const controls = useRef<Trackball>();\n\n  useEffect(() => {\n    if (titles.length === 0) {\n      setGraph(undefined);\n      return;\n    }\n\n    const main = async () => {\n      setData(\n        !graph\n          ? {}\n          : titles.reduce((obj, title) => {\n              let vertex = graph.getVertex(title);\n\n              obj[title] = {\n                in: vertex?.inDegree ?? \"?\",\n                out: vertex?.outDegree ?? \"?\",\n                degree: vertex?.degree ?? \"?\",\n              };\n\n              return obj;\n            }, {} as Data)\n      );\n\n      let newGraph = await buildGraph(titles);\n\n      setGraph(newGraph);\n      setData(\n        titles.reduce((obj, title) => {\n          let vertex = newGraph.getVertex(title);\n\n          obj[title] = {\n            in: vertex?.inDegree ?? 0,\n            out: vertex?.outDegree ?? 0,\n            degree: vertex?.degree ?? 0,\n          };\n\n          return obj;\n        }, {} as Data)\n      );\n    };\n\n    main();\n  }, [titles]);\n\n  // console.log(`graph`, graph);\n  // console.log(`titles`, titles);\n\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 10,\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: 15,\n        }}\n      >\n        <Input\n          ref={inputRef}\n          onResultClick={(result) => {\n            if (titles.includes(result)) {\n              return;\n            }\n\n            setTitles((oldTitles) => [...oldTitles, result]);\n          }}\n        />\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1,\n          top: \"9vh\",\n          left: 15,\n        }}\n      >\n        <Pages\n          pages={titles.map((title) => ({ title }))}\n          data={data}\n          removeTitle={(title) =>\n            setTitles((oldTitles) => {\n              let newTitles = _.pull([...oldTitles], title);\n              return newTitles;\n            })\n          }\n        />\n      </div>\n      {clicked && <PageInfo title={clicked.id} />}\n      <Canvas\n        // invalidateFrameloop\n        concurrent\n        camera={{\n          position: [0, 0, 32],\n          near: 0.1,\n          far: 64,\n          zoom: 2,\n        }}\n        orthographic\n        onCreated={({ gl }) => {\n          gl.outputEncoding = three.sRGBEncoding;\n        }}\n        onClick={(e) => {\n          inputRef.current?.blur();\n        }}\n      >\n        <TrackballControls\n          ref={controls}\n          mouseButtons={{\n            LEFT: three.MOUSE.PAN,\n            MIDDLE: three.MOUSE.MIDDLE,\n            RIGHT: three.MOUSE.ROTATE,\n          }}\n          noRotate\n          panSpeed={15}\n        />\n        {process.env.NODE_ENV === \"development\" && <Stats />}\n        <gridHelper />\n        <axesHelper />\n        <Suspense fallback={null}>\n          <Scene graph={graph} />\n        </Suspense>\n      </Canvas>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// (ReactDOM as any).unstable_createRoot(document.getElementById(\"root\")).render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}