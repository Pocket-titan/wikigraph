{"version":3,"sources":["ts/graph.ts","ts/utils.ts","ts/wiki.ts","components/Input/index.tsx","components/Input/Input.tsx","components/Pages.tsx","components/Graph.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["chance","Chance","getVertex","vertices","id","get","setVertex","vertex","set","setEdge","edges","edge","firstVertex","keys","key","Graph","_vertices","Map","_edges","this","i","length","values","f","g","forEach","source","target","newSource","newTarget","newEdge","predicate","keepSource","keepTarget","connections","outDegree","degree","inDegree","push","titles","initialAngle","Math","PI","initialRadius","size","Error","maxDegree","includes","angle","radius","sqrt","x","cos","y","sin","filter","title","map","titleVertex","me","_","isUndefined","random","mean","normal","dev","from","to","unwrapIfSingle","obj","isPlainObject","isArray","Object","isSingle","unwrap","stringifyParams","params","parsed","mapValues","value","Date","getTime","undefined","parseInt","qs","stringify","arrayFormat","arrayFormatSeparator","request","a","url","action","format","formatversion","origin","errorformat","utf8","fetch","method","mode","credentials","window","headers","response","ok","status","statusText","json","errors","JSON","getCustomLimits","entries","slice","batchRequest","results","res","continue","continueType","continueKey","prefixes","replace","some","prefix","flatMap","result","query","Cache","api","cacheKey","has","parse","getBacklinks","gbltitle","generator","gblnamespace","gbllimit","gblredirect","backlinks","iteratee","search","namespace","limit","summaries","urls","pages","zip","summary","Input","React","forwardRef","ref","onResultClick","width","height","useState","setValue","setResults","loading","setLoading","debouncedAutocomplete","useRef","debounce","input","wiki","resetInput","current","cancel","style","position","className","display","gridTemplateRows","gridTemplateColumns","boxShadow","type","placeholder","fontSize","onChange","onKeyDown","event","flexDirection","justifyContent","onClick","focus","disabled","preventDefault","flush","zIndex","top","overflow","toLowerCase","fontWeight","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","el","index","sort","useStyles","makeStyles","root","color","active","icon","Pages","data","removeTitle","setOrder","setOrderBy","styles","rows","in","out","columns","label","align","TableContainer","component","Paper","maxHeight","background","Table","stickyHeader","TableHead","TableRow","column","TableCell","borderBottom","padding","maxWidth","TableSortLabel","direction","classes","border","clip","margin","TableBody","row","scope","marginTop","HoverInfo","Html","scaleFactor","zIndexRange","borderRadius","dummyObject","three","dummyColor","graph","hovered","setHovered","colorAttrib","nodeMesh","useUpdate","mesh","scale","updateMatrix","setMatrixAt","matrix","setColorAt","edgeGeometry","geometry","setFromPoints","flat","computeBoundingSphere","edgeColors","useMemo","Float32Array","setColor","useCallback","instanceColor","needsUpdate","useEffect","instanceId","args","onPointerOut","onPointerMove","attach","attachObject","vertexColors","transparent","opacity","linewidth","makeVertex","buildGraph","Promise","all","links","reduce","calculateDegrees","clamp","weight","min","layout","Scene","intensity","App","inputRef","setGraph","setTitles","setData","main","console","log","oldTitles","left","pull","concurrent","camera","near","far","zoom","orthographic","onCreated","gl","outputEncoding","THREE","blur","TrackballControls","mouseButtons","LEFT","PAN","MIDDLE","RIGHT","ROTATE","noRotate","panSpeed","Stats","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.146b388c.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport Chance from \"chance\";\nconst chance = new Chance();\n\nexport type Id = string;\n\nexport type Vertex = {\n  id: Id;\n};\n\nexport type Edge = {\n  id: Id;\n  source: Id;\n  target: Id;\n};\n\nconst getVertex = <T extends Vertex>(vertices: Map<Id, T>, id: Id) => vertices.get(id)!;\n\nconst setVertex = <T extends Vertex>(vertices: Map<Id, T>, vertex: T) =>\n  void vertices.set(vertex.id, vertex);\n\nconst getEdge = <U extends Vertex>(edges: Map<Id, U>, id: Id) => edges.get(id)!;\n\nconst setEdge = <U extends Edge>(edges: Map<Id, U>, edge: U) =>\n  void edges.set(edge.id, edge);\n\nconst firstVertex = <T extends Vertex>(vertices: Map<Id, T>) => {\n  for (let key of vertices.keys()) {\n    return getVertex(vertices, key);\n  }\n};\n\nexport type Degrees = {\n  degree: number;\n  inDegree: number;\n  outDegree: number;\n};\n\nexport type Position = {\n  x: number;\n  y: number;\n};\n\nclass Graph<T extends Vertex = Vertex, U extends Edge = Edge> {\n  private _vertices = new Map<Id, T>();\n  private _edges = new Map<Id, U>();\n\n  get vertices() {\n    return [...this._vertices.values()];\n  }\n\n  get edges() {\n    return [...this._edges.values()];\n  }\n\n  getVertex(id: Id) {\n    return getVertex(this._vertices, id);\n  }\n\n  toJSON() {\n    return {\n      vertices: this.vertices,\n      edges: this.edges,\n    };\n  }\n\n  constructor(vertices?: T[] | Map<Id, T>, edges?: U[] | Map<Id, U>) {\n    if (vertices) {\n      if (vertices instanceof Map) {\n        this._vertices = vertices;\n      } else {\n        for (let i = 0; i < vertices.length; i++) {\n          let vertex = vertices[i];\n          this._vertices.set(vertex.id, vertex);\n        }\n      }\n    }\n\n    if (edges) {\n      if (edges instanceof Map) {\n        this._edges = edges;\n      } else {\n        for (let i = 0; i < edges.length; i++) {\n          let edge = edges[i];\n          this._edges.set(edge.id, edge);\n        }\n      }\n    }\n  }\n\n  map<A extends Vertex, B extends Edge = U>(\n    f: (vertex: T, graph: this) => A,\n    g?: (edge: U, graph: this) => B\n  ) {\n    let [vertices, edges] = [new Map(), new Map()];\n\n    this._edges.forEach((edge) => {\n      let source = getVertex(this._vertices, edge.source);\n      let target = getVertex(this._vertices, edge.target);\n\n      let newSource = f(source, this);\n      let newTarget = f(target, this);\n      setVertex(vertices, newSource);\n      setVertex(vertices, newTarget);\n\n      let newEdge = g ? g(edge, this) : edge;\n      newEdge.source = newSource.id;\n      newEdge.target = newTarget.id;\n      setEdge(edges, newEdge);\n    });\n\n    return new Graph<A, B>(vertices, edges);\n  }\n\n  filter(predicate: (vertex: T) => boolean) {\n    let [vertices, edges] = [new Map<Id, T>(), new Map<Id, U>()];\n\n    this._edges.forEach((edge) => {\n      let source = getVertex(this._vertices, edge.source);\n      let target = getVertex(this._vertices, edge.target);\n\n      let keepSource = predicate(source);\n      let keepTarget = predicate(target);\n\n      if (keepSource) {\n        setVertex(vertices, source);\n      }\n\n      if (keepTarget) {\n        setVertex(vertices, target);\n      }\n\n      if (keepSource && keepTarget) {\n        setEdge(edges, edge);\n      }\n    });\n\n    return new Graph(vertices, edges);\n  }\n\n  calculateDegrees(): Graph<T & Degrees & { connections: Id[] }, U> {\n    let [vertices, edges] = [\n      new Map<Id, T & Degrees & { connections: Id[] }>(this._vertices as any),\n      new Map(this._edges),\n    ];\n\n    vertices.forEach((vertex) => {\n      ([\"degree\", \"inDegree\", \"outDegree\"] as const).forEach((key) => {\n        vertex[key] = 0;\n      });\n\n      vertex.connections = [];\n    });\n\n    edges.forEach((edge) => {\n      let source = getVertex(vertices, edge.source);\n      let target = getVertex(vertices, edge.target);\n\n      source.outDegree += 1;\n      source.degree += 1;\n      target.inDegree += 1;\n      target.degree += 1;\n\n      source.connections.push(target.id);\n      target.connections.push(source.id);\n    });\n\n    return new Graph<T & Degrees & { connections: Id[] }, U>(vertices, edges);\n  }\n\n  layout(\n    titles: string[],\n    {\n      // initialAngle = Math.PI * (3 - Math.sqrt(5)),\n      initialAngle = (2 * Math.PI) / titles.length,\n      initialRadius = 10,\n    }: {\n      initialAngle?: number;\n      initialRadius?: number;\n    } = {\n      // initialAngle: Math.PI * (3 - Math.sqrt(5)),\n      initialAngle: (2 * Math.PI) / titles.length,\n      initialRadius: 10,\n    }\n  ): T extends Degrees\n    ? Graph<T & Position, U & { from: Position; to: Position }>\n    : never {\n    let [vertices, edges] = [\n      new Map<Id, T & Degrees & Partial<Position>>(this._vertices as any),\n      new Map<Id, U & Partial<{ from: Position; to: Position }>>(this._edges),\n    ];\n\n    if (vertices.size === 0) {\n      return this as any;\n    }\n\n    if (!firstVertex(vertices)?.degree) {\n      throw new Error();\n    }\n\n    let maxDegree = 0;\n    let i = 0;\n\n    vertices.forEach((vertex) => {\n      if (vertex.degree > maxDegree) {\n        maxDegree = vertex.degree;\n      }\n\n      if (titles.includes(vertex.id)) {\n        let [angle, radius] = [initialAngle * i, initialRadius * Math.sqrt(0.5 + i)];\n\n        vertex.x = radius * Math.cos(angle);\n        vertex.y = radius * Math.sin(angle);\n        i += 1;\n      }\n    });\n\n    edges.forEach((edge) => {\n      // We're basing the layout of our nodes on their first link to a titleVertex,\n      // so bail out if we're dealing with none or only titleVertices\n      if (\n        titles.filter((title) => title === edge.source || title === edge.target)\n          .length !== 1\n      ) {\n        return;\n      }\n\n      let [titleVertex, me] = (titles.includes(edge.source)\n        ? [edge.source, edge.target]\n        : [edge.target, edge.source]\n      ).map((x) => getVertex(vertices, x));\n\n      if (_.isUndefined(me.x) && _.isUndefined(me.y)) {\n        const angle = _.random(0, 2 * Math.PI);\n        const mean = initialRadius / 4 + (titleVertex.degree ** 2 / maxDegree ** 2) * 3;\n        const radius =\n          chance.normal({\n            mean,\n            dev: mean / 6,\n          }) +\n          me.inDegree / 2;\n\n        me.x = titleVertex.x! + radius * Math.cos(angle);\n        me.y = titleVertex.y! + radius * Math.sin(angle);\n      }\n    });\n\n    // If there's still nodes without positions (can happen if they have no links to titleNodes,\n    // for example), we still need to give 'em a position\n    edges.forEach((edge) => {\n      let source = getVertex(vertices, edge.source);\n      let target = getVertex(vertices, edge.target);\n\n      if (!source.x && !source.y) {\n        source.x = _.random(-initialRadius, initialRadius, true);\n        source.y = _.random(-initialRadius, initialRadius, true);\n      }\n\n      if (!target.x && !target.y) {\n        target.x = _.random(-initialRadius, initialRadius, true);\n        target.y = _.random(-initialRadius, initialRadius, true);\n      }\n\n      edge.from = { x: source.x!, y: source.y! };\n      edge.to = { x: target.x!, y: target.y! };\n    });\n\n    return new Graph(\n      vertices as Map<Id, T & Degrees & Position>,\n      edges as Map<Id, U & { from: Position; to: Position }>\n    ) as any;\n  }\n}\n\nexport default Graph;\n","import G from \"generatorics\";\nimport _ from \"lodash\";\n\nexport const isSingle = (obj: any[] | { [key: string]: any }) =>\n  !(_.isPlainObject(obj) || _.isArray(obj)) ? false : Object.keys(obj).length === 1;\n\nexport const unwrap = (obj: object) => obj[Object.keys(obj)[0]];\n\nexport const unwrapIfSingle = (obj: any) => (isSingle(obj) ? unwrap(obj) : obj);\n\nexport const merge = (object: any, ...sources: any[]) => {\n  return _.mergeWith(object, ...sources, (objValue, srcValue) => {\n    if (_.isArray(objValue)) {\n      return objValue.concat(srcValue);\n    }\n  });\n};\n\nexport const permutations = function* <T>(arr: T[], size = arr.length): Generator<T[]> {\n  return yield* G.permutation(arr, size);\n};\n","import fetch from \"cross-fetch\";\nimport qs from \"query-string\";\nimport _ from \"lodash\";\nimport { unwrapIfSingle } from \"./utils\";\n\nlet props = [\n  \"categories\",\n  \"categoryinfo\",\n  \"cirrusbuilddoc\",\n  \"cirruscompsuggestbuilddoc\",\n  \"cirrusdoc\",\n  \"contributors\",\n  \"deletedrevisions\",\n  \"duplicatefiles\",\n  \"extlinks\",\n  \"extracts\",\n  \"fileusage\",\n  \"globalusage\",\n  \"imageinfo\",\n  \"images\",\n  \"info\",\n  \"iwlinks\",\n  \"langlinks\",\n  \"links\",\n  \"linkshere\",\n  \"pageimages\",\n  \"pageprops\",\n  \"pageterms\",\n  \"pageviews\",\n  \"redirects\",\n  \"revisions\",\n  \"stashimageinfo\",\n  \"templates\",\n  \"transcludedin\",\n  \"transcodestatus\",\n  \"videoinfo\",\n  \"wbentityusage\",\n  \"flowinfo\",\n  \"description\",\n  \"mapdata\",\n] as const;\n\ntype Prop = typeof props[number];\n\nlet lists = [\n  \"abusefilters\",\n  \"abuselog\",\n  \"allcategories\",\n  \"alldeletedrevisions\",\n  \"allfileusages\",\n  \"allimages\",\n  \"alllinks\",\n  \"allpages\",\n  \"allredirects\",\n  \"allrevisions\",\n  \"alltransclusions\",\n  \"allusers\",\n  \"backlinks\",\n  \"betafeatures\",\n  \"blocks\",\n  \"categorymembers\",\n  \"centralnoticeactivecampaigns\",\n  \"centralnoticelogs\",\n  \"checkuser\",\n  \"checkuserlog\",\n  \"codecomments\",\n  \"codepaths\",\n  \"coderevisions\",\n  \"codetags\",\n  \"embeddedin\",\n  \"extdistrepos\",\n  \"exturlusage\",\n  \"filearchive\",\n  \"gadgetcategories\",\n  \"gadgets\",\n  \"globalallusers\",\n  \"globalblocks\",\n  \"globalgroups\",\n  \"imageusage\",\n  \"iwbacklinks\",\n  \"langbacklinks\",\n  \"linterrors\",\n  \"logevents\",\n  \"messagecollection\",\n  \"mostviewed\",\n  \"mystashedfiles\",\n  \"pagepropnames\",\n  \"pageswithprop\",\n  \"prefixsearch\",\n  \"protectedtitles\",\n  \"querypage\",\n  \"random\",\n  \"recentchanges\",\n  \"search\",\n  \"tags\",\n  \"threads\",\n  \"usercontribs\",\n  \"users\",\n  \"watchlist\",\n  \"watchlistraw\",\n  \"wblistentityusage\",\n  \"wikisets\",\n  \"deletedrevs\",\n  \"extdistbranches\",\n  \"mmsites\",\n  \"readinglistentries\",\n] as const;\n\ntype List = typeof lists[number];\n\nlet generator = [\n  \"allcategories\",\n  \"alldeletedrevisions\",\n  \"allfileusages\",\n  \"allimages\",\n  \"alllinks\",\n  \"allpages\",\n  \"allredirects\",\n  \"allrevisions\",\n  \"alltransclusions\",\n  \"backlinks\",\n  \"categories\",\n  \"categorymembers\",\n  \"deletedrevisions\",\n  \"duplicatefiles\",\n  \"embeddedin\",\n  \"exturlusage\",\n  \"fileusage\",\n  \"images\",\n  \"imageusage\",\n  \"iwbacklinks\",\n  \"langbacklinks\",\n  \"links\",\n  \"linkshere\",\n  \"messagecollection\",\n  \"mostviewed\",\n  \"pageswithprop\",\n  \"prefixsearch\",\n  \"protectedtitles\",\n  \"querypage\",\n  \"random\",\n  \"recentchanges\",\n  \"redirects\",\n  \"revisions\",\n  \"search\",\n  \"templates\",\n  \"transcludedin\",\n  \"watchlist\",\n  \"watchlistraw\",\n  \"wblistentityusage\",\n  \"readinglistentries\",\n] as const;\n\ntype Generator = typeof generator[number];\n\ntype Params = {\n  titles?: string | string[];\n  pageids?: number[];\n  revids?: number[];\n  prop?: Prop | Prop[];\n  list?: List | List[];\n  generator?: Generator | Generator[];\n  iwurl?: boolean;\n  redirects?: boolean | string;\n  converttitles?: boolean;\n  [key: string]: any;\n};\n\nfunction stringifyParams(params: { [key: string]: any }) {\n  let parsed = _.mapValues(params, (value, key, obj) => {\n    if (value instanceof Date) {\n      return value.getTime();\n    }\n\n    if (typeof value === \"boolean\") {\n      return value === true ? \"\" : undefined;\n    }\n\n    if (key === \"minsize\" || key === \"maxsize\") {\n      return parseInt(value);\n    }\n\n    return value;\n  });\n\n  return qs.stringify(parsed, {\n    arrayFormat: \"separator\",\n    arrayFormatSeparator: \"|\",\n  });\n}\n\nexport async function request(params: Params = {}) {\n  const url =\n    \"https://nl.wikipedia.org/w/api.php?\" +\n    stringifyParams({\n      ...params,\n      action: params.action || \"query\",\n      format: \"json\",\n      formatversion: 2,\n      origin: \"*\",\n      errorformat: \"raw\",\n      utf8: true,\n    });\n\n  const response = await fetch(url, {\n    method: \"GET\",\n    mode: \"cors\",\n    credentials: \"omit\",\n    ...(typeof window === \"undefined\"\n      ? {\n          headers: {\n            \"User-Agent\":\n              \"graph-builder (https://github.com/pocket-titan/; jelmargerritsen@gmail.com) wiki.ts\",\n          },\n        }\n      : {}),\n  });\n\n  if (!response.ok) {\n    throw new Error(`${response.status}: ${response.statusText}`);\n  }\n\n  let json = await response.json();\n\n  if (json.errors) {\n    throw new Error(JSON.stringify(json, null, 2));\n  }\n\n  return json;\n}\n\nconst getCustomLimits = (params: Params): string[] => {\n  let keys = Object.entries(params)\n    .filter(\n      ([key, value]) =>\n        (key === \"limit\" ||\n          key.slice(1) === \"limit\" ||\n          key.slice(2) === \"limit\" ||\n          key.slice(3) === \"limit\") &&\n        value !== \"max\" &&\n        (typeof value === \"number\" ? value < 500 : true)\n    )\n    .map(([key, value]) => key);\n\n  return keys;\n};\n\nasync function batchRequest(params: Params = {}, results: any[] = []): Promise<any[]> {\n  let res = await request(params);\n  results.push(res);\n\n  if (res.continue) {\n    let continueType = Object.keys(res.continue).filter((key) => key !== \"continue\")[0];\n    let continueKey = res.continue[continueType];\n\n    let prefixes = getCustomLimits(params).map((x) => x.replace(\"limit\", \"\"));\n\n    if (\n      ![\n        continueType.slice(0, 1),\n        continueType.slice(0, 2),\n        continueType.slice(0, 3),\n      ].some((prefix) => prefixes.includes(prefix))\n    ) {\n      return await batchRequest({ ...params, [continueType]: continueKey }, results);\n    }\n  }\n\n  return unwrapIfSingle(\n    results.flatMap((result) =>\n      unwrapIfSingle(_.isPlainObject(result) ? result.query : result)\n    )\n  );\n}\n\nconst Cache = new Map<string, string>();\n\nexport async function api(params: Params = {}) {\n  let cacheKey = JSON.stringify(params);\n\n  if (Cache.has(cacheKey)) {\n    try {\n      return JSON.parse(Cache.get(cacheKey)!);\n    } catch {}\n  }\n\n  let results = await batchRequest(params);\n  Cache.set(cacheKey, JSON.stringify(results));\n  return results;\n}\n\ntype BlParams = Prefix<\n  \"bl\",\n  {\n    title?: string;\n    pageid?: number;\n    namespace?: Namespace | Namespace[] | \"*\";\n    dir?: \"ascending\" | \"descending\";\n    filterredir?: \"all\" | \"nonredirects\" | \"redirects\";\n    limit?: number | \"max\";\n    redirect?: boolean;\n  }\n>;\n\ntype Namespace =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 90\n  | 91\n  | 92\n  | 93\n  | 100\n  | 101\n  | 102\n  | 103\n  | 104\n  | 105\n  | 106\n  | 107\n  | 486\n  | 487\n  | 828\n  | 829\n  | 1198\n  | 1199\n  | 2300\n  | 2301\n  | 2302\n  | 2303\n  | 2600\n  | 5500\n  | 5501;\n\ntype Parameters = {\n  titles?: string[];\n  pageids?: number[];\n  prop?: Prop | Prop[];\n  list?: List | List[];\n  generator?:\n    | \"allpages\"\n    | \"allimages\"\n    | \"alllinks\"\n    | \"linkshere\"\n    | \"backlinks\"\n    | \"links\"\n    | \"search\";\n  redirects?: boolean;\n  namespace?: Namespace;\n  limit?: number | \"max\";\n  show?: \"redirect\" | \"!redirect\" | [\"redirect\", \"!redirect\"];\n  title?: string;\n  pageid?: number | string;\n  dir?: \"ascending\" | \"descending\";\n  filterredir?: \"all\" | \"nonredirects\" | \"redirects\";\n  redirect?: boolean;\n  from?: string;\n  to?: string;\n  prefix?: string;\n  sort?: \"name\" | \"timestamp\";\n  start?: Date;\n  end?: Date;\n  minsize?: number;\n  maxsize?: number;\n};\n\ntype Prefix<A extends string, B extends { [key: string]: any }> = keyof B extends string\n  ? {\n      [K in keyof B as `${A}${K}`]: B[K];\n    }\n  : never;\n\ntype AllParams = {\n  title?: string;\n  pageid?: number;\n  namespace?: Namespace | Namespace[] | \"*\";\n  dir?: \"ascending\" | \"descending\";\n  filterredir?: \"all\" | \"nonredirects\" | \"redirects\";\n  limit?: number | \"max\";\n  redirect?: boolean;\n  prop?: (\"pageid\" | \"title\" | \"redirect\")[];\n  show?: \"redirect\" | \"!redirect\" | (\"redirect\" | \"!redirect\")[];\n};\n\nexport async function getLinks(title: string): Promise<string[]> {\n  let links = await api({\n    titles: title,\n    generator: \"links\",\n    gplnamespace: 0,\n    gpllimit: \"max\",\n  });\n\n  return (_.isPlainObject(links) ? [links] : links)\n    .filter((link) => !link.missing)\n    .map(_.iteratee(\"title\"));\n}\n\nexport async function getBacklinks(title: string): Promise<string[]> {\n  // For some reason, blredirect: true does not work with list: 'backlinks',\n  // but gblredirect: true with generator: 'backlinks' _does_, so we use the latter /shrug\n  let backlinks = await api({\n    gbltitle: title,\n    generator: \"backlinks\",\n    gblnamespace: 0,\n    gbllimit: \"max\",\n    gblredirect: true,\n  });\n\n  return (!backlinks ? [] : _.isPlainObject(backlinks) ? [backlinks] : backlinks).map(\n    _.iteratee(\"title\")\n  );\n}\n\nexport async function search(query: string): Promise<string[]> {\n  let results: [string, string[], string[], string[]] = await api({\n    action: \"opensearch\",\n    search: query,\n    namespace: 0,\n    limit: 5,\n  });\n\n  let [, titles, summaries, urls] = results;\n\n  let pages = _.zip(titles, summaries, urls).map(([title, summary, url]) => ({\n    title,\n    summary,\n    url,\n  }));\n\n  return pages.map(_.iteratee(\"title\"));\n}\n","import Input from \"./Input\";\n\nexport default Input;\n","import React, { useRef, useState, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport * as wiki from \"ts/wiki\";\nimport \"./Input.css\";\n\nconst Input = React.forwardRef<\n  HTMLInputElement,\n  {\n    onResultClick?: (result: string) => void;\n    width?: number;\n    height?: number;\n  }\n>(({ onResultClick = () => {}, width = 350, height = 55 }, ref) => {\n  const [value, setValue] = useState(\"\");\n  const [results, setResults] = useState<string[]>([]);\n  const [loading, setLoading] = useState(false);\n  const debouncedAutocomplete = useRef(\n    _.debounce(async (input: string) => {\n      setLoading(true);\n\n      try {\n        let results = await wiki.search(input);\n        setResults(results);\n      } catch {\n      } finally {\n        setLoading(false);\n      }\n    }, 1000)\n  );\n\n  const resetInput = () => {\n    setValue(\"\");\n    setResults([]);\n    debouncedAutocomplete.current.cancel();\n  };\n\n  return (\n    <div style={{ position: \"relative\", width: 350 }}>\n      <div\n        className=\"search\"\n        style={{\n          height,\n          display: \"grid\",\n          gridTemplateRows: `${height}px`,\n          gridTemplateColumns: \"minmax(0, 1fr) 100px\",\n          boxShadow: \"0px 5px 10px rgba(0,0,0,0.19), 2px 2px 5px rgba(0,0,0,0.20)\",\n        }}\n      >\n        <input\n          ref={ref}\n          type=\"text\"\n          value={value}\n          placeholder=\"Search!\"\n          style={{ fontSize: 22 }}\n          onChange={({ target: { value } }) => {\n            setValue(value);\n\n            if (value.length === 0) {\n              debouncedAutocomplete.current.cancel();\n              setResults([]);\n            } else {\n              debouncedAutocomplete.current(value);\n            }\n          }}\n          onKeyDown={(event) => {\n            switch (event.key) {\n              case \"Enter\": {\n                if (results.length === 0) {\n                  return;\n                }\n\n                onResultClick(results[0]);\n                resetInput();\n                break;\n              }\n              case \"Escape\": {\n                resetInput();\n                break;\n              }\n            }\n          }}\n        />\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"row\",\n            justifyContent: \"flex-end\",\n          }}\n        >\n          {value.length > 0 && (\n            <button\n              className=\"clear-button\"\n              onClick={() => {\n                resetInput();\n                (ref as React.MutableRefObject<HTMLInputElement>).current?.focus();\n              }}\n            >\n              <i className=\"icon ion-android-close\" />\n            </button>\n          )}\n          {loading ? (\n            <button disabled={true}>\n              <div className=\"loader\" />\n            </button>\n          ) : (\n            <button\n              className=\"search-button\"\n              onClick={(event) => {\n                event.preventDefault();\n\n                if (value.length > 0) {\n                  debouncedAutocomplete.current.flush();\n                }\n              }}\n            >\n              <i className=\"icon ion-android-search\" />\n            </button>\n          )}\n        </div>\n      </div>\n      <div\n        className=\"results\"\n        style={{\n          zIndex: 999,\n          position: \"absolute\",\n          top: \"100%\",\n          width,\n          overflow: \"hidden\",\n          boxShadow: \"0px 5px 10px rgba(0,0,0,0.19), 2px 2px 5px rgba(0,0,0,0.20)\",\n        }}\n      >\n        {results.map((result) => (\n          <div\n            key={result}\n            className=\"result\"\n            onClick={() => {\n              onResultClick(result);\n              resetInput();\n            }}\n          >\n            {result.slice(0, value.length).toLowerCase() === value.toLowerCase() ? (\n              <>\n                <span\n                  style={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  {result.slice(0, value.length)}\n                </span>\n                <span>{result.slice(value.length)}</span>\n              </>\n            ) : (\n              <span>{result}</span>\n            )}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n});\n\nexport default Input;\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Paper from \"@material-ui/core/Paper\";\nimport type { Data } from \"../App\";\n\ntype Page = {\n  title: string;\n};\n\ntype Column = {\n  id: string;\n  label: string;\n  align?: \"left\" | \"right\" | \"justify\" | \"center\";\n};\n\ntype Order = \"asc\" | \"desc\";\n\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator<Key extends string>(\n  order: Order,\n  orderBy: Key\n): (a: any, b: any) => number {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort<T>(array: T[], comparator: (a: T, b: T) => number) {\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number]);\n\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst useStyles = makeStyles({\n  root: {\n    color: \"red\",\n    \"&:hover\": {\n      color: \"blue\",\n    },\n    \"&$active\": {\n      color: \"green\",\n    },\n  },\n  active: {},\n  icon: {\n    color: \"inherit !important\",\n  },\n});\n\ntype Row = {\n  id: string;\n  title: string;\n} & Data[keyof Data];\n\nconst Pages = ({\n  pages,\n  data,\n  removeTitle,\n}: {\n  pages: Page[];\n  data?: Data;\n  removeTitle: (title: string) => void;\n}) => {\n  const [order, setOrder] = useState<Order>(\"asc\");\n  const [orderBy, setOrderBy] = useState<string>(\"index\");\n  const styles = useStyles();\n\n  const sort = (key: string) => {\n    const isAsc = orderBy === key && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(key);\n  };\n\n  const rows: Row[] = pages.map(({ title }) => ({\n    id: title,\n    title,\n    ...(data?.[title] || { in: \"?\", out: \"?\", degree: \"?\" }),\n  }));\n\n  const columns: Column[] = [\n    {\n      id: \"title\",\n      label: \"Title\",\n      align: \"left\",\n    },\n    {\n      id: \"in\",\n      label: \"In\",\n      align: \"right\",\n    },\n    {\n      id: \"out\",\n      label: \"Out\",\n      align: \"right\",\n    },\n    {\n      id: \"degree\",\n      label: \"Degree\",\n      align: \"right\",\n    },\n  ];\n\n  return (\n    <TableContainer\n      component={Paper}\n      style={{\n        maxHeight: \"40vh\",\n        boxShadow: \"0px 5px 10px rgba(0,0,0,0.19), 2px 2px 5px rgba(0,0,0,0.20)\",\n        background: \"var(--input-background)\",\n        // width: 275,\n      }}\n    >\n      <Table stickyHeader style={{ color: \"hsl(227, 18%, 70%)\", width: \"unset\" }}>\n        <TableHead>\n          <TableRow>\n            {columns.map((column, i) => (\n              <TableCell\n                key={column.id}\n                align={column.align || \"right\"}\n                size=\"small\"\n                style={{\n                  borderBottom: rows.length === 0 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: `6px ${i === columns.length - 1 ? 10 : 0}px 6px ${\n                    i === 0 ? 10 : 0\n                  }px`,\n                  background: \"var(--input-background)\",\n                  ...{\n                    maxWidth: i !== 0 ? 80 : 100,\n                  },\n                }}\n              >\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={orderBy === column.id ? order : \"asc\"}\n                  onClick={() => sort(column.id)}\n                  classes={{\n                    root: styles.root,\n                    active: styles.active,\n                    icon: styles.icon,\n                  }}\n                  style={{\n                    color: \"hsl(227, 18%, 70%)\",\n                  }}\n                >\n                  {column.label}\n                  {orderBy === column.id ? (\n                    <span\n                      style={{\n                        border: 0,\n                        clip: \"rect(0 0 0 0)\",\n                        height: 1,\n                        margin: -1,\n                        overflow: \"hidden\",\n                        padding: 0,\n                        position: \"absolute\",\n                        top: 20,\n                        width: 1,\n                      }}\n                    >\n                      {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                    </span>\n                  ) : null}\n                </TableSortLabel>\n              </TableCell>\n            ))}\n            <TableCell\n              style={{\n                width: 25,\n                padding: 0,\n                background: \"var(--input-background)\",\n                borderBottom: rows.length === 0 ? \"none\" : \"1.5px solid #5e9a9e\",\n              }}\n            ></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {stableSort(rows, getComparator(order, orderBy)).map((row, i) => (\n            <TableRow key={row.title}>\n              <TableCell\n                component=\"th\"\n                scope=\"row\"\n                size=\"small\"\n                style={{\n                  color: \"hsl(227, 18%, 75%)\",\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: \"6px 0px 6px 10px\",\n                  maxWidth: 100,\n                }}\n              >\n                {row.title}\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                size=\"small\"\n                style={{\n                  color: \"hsl(227, 18%, 75%)\",\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: \"6px 0px 6px 0px\",\n                  maxWidth: 80,\n                }}\n              >\n                {row.in}\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                size=\"small\"\n                style={{\n                  color: \"hsl(227, 18%, 75%)\",\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: \"6px 0px 6px 0px\",\n                  maxWidth: 80,\n                }}\n              >\n                {row.out}\n              </TableCell>\n              <TableCell\n                align=\"right\"\n                size=\"small\"\n                style={{\n                  color: \"hsl(227, 18%, 75%)\",\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                  padding: \"6px 10px 6px 0px\",\n                  maxWidth: 80,\n                }}\n              >\n                {row.degree}\n              </TableCell>\n              <TableCell\n                style={{\n                  padding: 0,\n                  borderBottom: i === rows.length - 1 ? \"none\" : \"1.5px solid #5e9a9e\",\n                }}\n              >\n                <button\n                  onClick={() => removeTitle(row.title)}\n                  style={{\n                    width: 22,\n                    height: 20,\n                    fontSize: 20,\n                    marginTop: 2,\n                  }}\n                >\n                  <i className=\"icon ion-android-close\" />\n                </button>\n              </TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n};\n\nexport default Pages;\n","import React, { useState, useMemo, useEffect, useCallback, useRef } from \"react\";\nimport * as three from \"three\";\nimport { useFrame, useUpdate } from \"react-three-fiber\";\nimport type { DisplayGraph } from \"../App\";\nimport { Html } from \"@react-three/drei\";\nimport { useSpring } from \"react-spring\";\n\nconst HoverInfo = ({\n  vertex: { id, x, y, color, radius },\n}: {\n  vertex: { id: string; x: number; y: number; color: string; radius: number };\n}) => (\n  <Html position={[x + radius, y, 1]} scaleFactor={2} zIndexRange={[0, 100]}>\n    <div style={{ background: \"white\", padding: 3, borderRadius: 2 }}>{id}</div>\n  </Html>\n);\n\nconst dummyObject = new three.Object3D();\nconst dummyColor = new three.Color();\n\nconst Graph = ({ graph: { vertices, edges } }: { graph: DisplayGraph }) => {\n  const [hovered, setHovered] = useState<{ instanceId: number; id: string }>();\n  const colorAttrib = useRef<three.BufferAttribute>();\n\n  const nodeMesh = useUpdate<three.InstancedMesh>(\n    (mesh) => {\n      vertices.forEach((vertex, i) => {\n        dummyObject.position.set(vertex.x, vertex.y, 0);\n        dummyObject.scale.set(vertex.radius, vertex.radius, 1);\n        dummyObject.updateMatrix();\n        mesh.setMatrixAt(i, dummyObject.matrix);\n\n        dummyColor.set(vertex.color);\n        mesh.setColorAt(i, dummyColor);\n      });\n    },\n    [vertices]\n  );\n\n  const edgeGeometry = useUpdate<three.BufferGeometry>(\n    (geometry) => {\n      geometry.setFromPoints(\n        edges\n          .map(({ from, to }) => [\n            new three.Vector3(from.x, from.y, -1),\n            new three.Vector3(to.x, to.y, -1),\n          ])\n          .flat(1)\n      );\n\n      geometry.computeBoundingSphere();\n    },\n    [edges]\n  );\n\n  const { edgeColors } = useMemo(() => {\n    const edgeColors = Float32Array.from(\n      edges\n        .map((edge, i) =>\n          hovered && hovered.id !== edge.source && hovered.id !== edge.target\n            ? [\n                [0.086, 0.086, 0.11],\n                [0.086, 0.086, 0.11],\n              ]\n            : [\n                [0.2, 0.6, 0.9],\n                [0.7, 0.2, 0.1],\n              ]\n        )\n        .flat(2)\n    );\n\n    return { edgeColors };\n  }, [edges, hovered]);\n\n  const setColor = useCallback(\n    (id: number, color: three.Color | string) => {\n      dummyColor.set(color);\n      nodeMesh.current!.setColorAt(id, dummyColor);\n      nodeMesh.current!.instanceColor!.needsUpdate = true;\n    },\n    [nodeMesh]\n  );\n\n  // const [{ color }, set] = useSpring(() => ({\n  //   color: \"#ffffff\",\n  //   config: {\n  //     mass: 5,\n  //     duration: 125,\n  //   },\n  // }));\n\n  // useFrame(() => {\n  //   if (hovered) {\n  //     const d = color.interpolate((v) => v).getValue();\n  //     console.log(`d`, d);\n  //     dummyColor.set(d!);\n  //     // dummyColor.toArray(nodeMesh.current!.instanceColor, hovered * 3);\n  //     setColor(hovered, dummyColor);\n  //     // colorAttrib.current!.needsUpdate = true;\n  //   }\n  // });\n\n  useEffect(() => {\n    if (hovered !== undefined) {\n      vertices.forEach((vertex, i) => {\n        if (!vertex.connections.includes(hovered.id)) {\n          setColor(i, \"#16161b\");\n        }\n      });\n\n      setColor(hovered.instanceId, \"#f06\");\n      // set({\n      //   // @ts-expect-error\n      //   to: { color: \"#f06\" },\n      //   from: { color: \"#fff\" },\n      //   reset: true,\n      // });\n    } else {\n      vertices.forEach((vertex, i) => {\n        setColor(i, vertex.color);\n      });\n    }\n  }, [hovered, setColor]);\n\n  return (\n    <>\n      <instancedMesh\n        // We set the `key` prop such that React recreates it everytime `vertices.length` changes,\n        // this is because we can't increase the count of an InstancedMesh without recreating it\n        key={vertices.length}\n        ref={nodeMesh}\n        args={[null!, null!, vertices.length]}\n        onPointerOut={({ instanceId }) => {\n          if (instanceId === undefined) {\n            return;\n          }\n\n          let vertex = vertices[instanceId];\n\n          setColor(instanceId, vertex.color);\n          setHovered(undefined);\n        }}\n        onPointerMove={({ instanceId }) => {\n          if (instanceId === undefined) {\n            return;\n          }\n\n          let vertex = vertices[instanceId];\n\n          if (hovered === undefined) {\n            setHovered({ instanceId, id: vertex.id });\n            return;\n          }\n\n          if (hovered.instanceId !== instanceId) {\n            setColor(hovered.instanceId, vertex.color);\n            setHovered({ instanceId, id: vertex.id });\n          }\n        }}\n      >\n        <circleBufferGeometry args={[1, 30]} />\n        <meshBasicMaterial />\n      </instancedMesh>\n      {hovered !== undefined && <HoverInfo vertex={vertices[hovered.instanceId]} />}\n      <lineSegments>\n        <bufferGeometry ref={edgeGeometry} attach=\"geometry\">\n          <bufferAttribute\n            ref={colorAttrib}\n            attachObject={[\"attributes\", \"color\"]}\n            args={[edgeColors, 3]}\n          />\n        </bufferGeometry>\n        <lineBasicMaterial\n          attach=\"material\"\n          vertexColors\n          color=\"white\"\n          transparent\n          opacity={0.3}\n          linewidth={0.5}\n        />\n      </lineSegments>\n\n      {/* <primitive ref={nodeMesh} object={instancedNodeMesh} /> */}\n      {/* <instancedMesh ref={nodeMesh} args={[null!, null!, 100000]}>\n        <circleBufferGeometry args={[1, 30]} />\n        <meshBasicMaterial />\n      </instancedMesh> */}\n      {/* <lineSegments args={[geom]}>\n        <lineBasicMaterial color={\"white\"} linewidth={10} />\n      </lineSegments> */}\n      {/* </instancedMesh> */}\n      {/* <instancedMesh ref={edgeMesh} args={[null!, null!, 10000]}>\n        <meshLine\n          attach=\"geometry\"\n          points={edges\n            .map(({ from, to }) => [\n              new three.Vector3(from.x, from.y, -1),\n              new three.Vector3(to.x, to.y, -1),\n            ])\n            .flat(1)}\n        ></meshLine>\n        <meshLineMaterial attach=\"material\" lineWidth={2} />\n      </instancedMesh> */}\n      {/* <group matrixAutoUpdate={false}>\n        {edges.map((edge) => {\n          return (\n            <mesh>\n              <meshLine\n                attach=\"geometry\"\n                points={[\n                  new three.Vector3(edge.from.x, edge.from.y, -1),\n                  new three.Vector3(edge.to.x, edge.to.y, -1),\n                ]}\n              />\n              <meshLineMaterial attach=\"material\" lineWidth={0.5} />\n            </mesh>\n          );\n        })}\n      </group> */}\n    </>\n  );\n};\n\nexport default Graph;\n","import React, { Suspense, useState, useRef, useLayoutEffect, useEffect } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport { Stats, TrackballControls } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport _ from \"lodash\";\nimport Graph, { Id, Vertex, Edge, Degrees } from \"ts/graph\";\nimport { getLinks, getBacklinks } from \"ts/wiki\";\nimport Input from \"components/Input\";\nimport Pages from \"components/Pages\";\nimport GraphView from \"components/Graph\";\n\nconst makeVertex = (id: Id): Vertex => ({ id });\n\nasync function buildGraph(titles: string[]) {\n  let { vertices, edges } = (\n    await Promise.all(\n      titles.map(async (title) => {\n        let [links, backlinks] = await Promise.all([\n          // getLinks(title),\n          [],\n          getBacklinks(title),\n        ]);\n\n        return {\n          title,\n          links,\n          backlinks,\n        };\n      })\n    )\n  ).reduce(\n    ({ vertices, edges }, { title, links, backlinks }) => ({\n      vertices: [\n        ...vertices,\n        makeVertex(title),\n        ...backlinks.map(makeVertex),\n        // ...links.map(makeVertex),\n      ],\n      edges: [\n        ...edges,\n        ...backlinks.map((source) => ({\n          id: `${source}->${title}`,\n          source,\n          target: title,\n        })),\n        // ...links.map((target) => ({\n        //   id: `${title}->${target}`,\n        //   source: title,\n        //   target,\n        // })),\n      ],\n    }),\n    { vertices: [] as Vertex[], edges: [] as Edge[] }\n  );\n\n  let graph = new Graph(vertices, edges).calculateDegrees();\n\n  if (titles.length > 1) {\n    graph = graph.filter((vertex) => vertex.degree > 1).calculateDegrees();\n  }\n\n  return graph\n    .map(\n      (vertex) => {\n        let radius = 5 + _.clamp(2 * vertex.degree, 0, 15);\n\n        let color = titles.includes(vertex.id)\n          ? vertex.id === titles[titles.length - 1]\n            ? \"#f5540a\"\n            : \"#f5ba17\"\n          : \"#2dd4c7\";\n\n        return {\n          ...vertex,\n          radius,\n          color,\n        } as typeof vertex & { radius: number; color: string };\n      },\n      (edge, graph) => {\n        let source = graph.getVertex(edge.source);\n        let target = graph.getVertex(edge.target);\n\n        let weight = 0.1 + Math.min(source.degree, target.degree) / 12;\n\n        return {\n          ...edge,\n          weight,\n        } as typeof edge & { weight: number };\n      }\n    )\n    .layout(titles, { initialRadius: 1000 });\n}\n\ntype UnwrapPromise<T> = T extends Promise<infer U> ? U : never;\n\nexport type DisplayGraph = UnwrapPromise<ReturnType<typeof buildGraph>>;\n\nconst Scene = ({ graph }: { graph?: DisplayGraph }) => {\n  return (\n    <>\n      <ambientLight />\n      <hemisphereLight color=\"#ffffff\" intensity={1.0} />\n      {/* <pointLight position={[0, 0, 15]} intensity={2.0} color=\"#ffffff\" /> */}\n      {graph && <GraphView graph={graph} />}\n    </>\n  );\n};\n\nexport type Data = {\n  [key: string]: {\n    in: number | string;\n    out: number | string;\n    degree: number | string;\n  };\n};\n\nconst App = () => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [graph, setGraph] = useState<DisplayGraph>();\n  const [titles, setTitles] = useState<string[]>([]);\n  const [data, setData] = useState<Data>();\n\n  useEffect(() => {\n    if (titles.length === 0) {\n      setGraph(undefined);\n      return;\n    }\n\n    const main = async () => {\n      let graph = await buildGraph(titles);\n      setGraph(graph);\n      setData(\n        titles.reduce((obj, title) => {\n          let vertex = graph.getVertex(title);\n\n          obj[title] = {\n            in: vertex?.inDegree ?? \"?\",\n            out: vertex?.outDegree ?? \"?\",\n            degree: vertex?.degree ?? \"?\",\n          };\n\n          return obj;\n        }, {} as Data)\n      );\n    };\n\n    main();\n  }, [titles]);\n\n  console.log(`graph`, graph);\n  console.log(`titles`, titles);\n\n  return (\n    <div style={{ width: \"100vw\", height: \"100vh\" }}>\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 10,\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          marginTop: 15,\n        }}\n      >\n        <Input\n          ref={inputRef}\n          onResultClick={(result) => {\n            if (titles.includes(result)) {\n              return;\n            }\n\n            setTitles((oldTitles) => [...oldTitles, result]);\n          }}\n        />\n      </div>\n      <div\n        style={{\n          position: \"absolute\",\n          zIndex: 1,\n          top: \"9vh\",\n          left: 15,\n        }}\n      >\n        <Pages\n          pages={titles.map((title) => ({ title }))}\n          data={data}\n          removeTitle={(title) =>\n            setTitles((oldTitles) => {\n              let newTitles = _.pull([...oldTitles], title);\n              return newTitles;\n            })\n          }\n        />\n      </div>\n      <Canvas\n        concurrent\n        camera={{\n          position: [0, 0, 32],\n          near: 0.1,\n          far: 64,\n          zoom: 2,\n        }}\n        orthographic\n        onCreated={({ gl }) => {\n          gl.outputEncoding = THREE.sRGBEncoding;\n        }}\n        onClick={() => {\n          inputRef.current?.blur();\n        }}\n        // invalidateFrameloop\n      >\n        <TrackballControls\n          mouseButtons={{\n            LEFT: THREE.MOUSE.PAN,\n            MIDDLE: THREE.MOUSE.MIDDLE,\n            RIGHT: THREE.MOUSE.ROTATE,\n          }}\n          noRotate\n          panSpeed={10}\n        />\n        <Stats />\n        <gridHelper />\n        <axesHelper />\n        <Suspense fallback={null}>\n          <Scene graph={graph} />\n        </Suspense>\n      </Canvas>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\n// (ReactDOM as any).unstable_createRoot(document.getElementById(\"root\")).render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}